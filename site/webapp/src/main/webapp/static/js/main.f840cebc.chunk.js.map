{"version":3,"sources":["components/Article.tsx","components/AzureADProfile.tsx","components/Footer.tsx","components/HeroBanner.tsx","components/Menu.tsx","components/SharepointFiles.tsx","App.tsx","index.tsx"],"names":["Article","props","articleDocumentRef","component","getModels","articleDocument","page","getContent","React","useContext","BrPageContext","getData","title","summary","relatedNews","relatedLinks","relatedNewsRef","relatedArticleDocument","_links","relatedArticleUrl","getUrl","site","type","href","push","Item","key","dangerouslySetInnerHTML","__html","value","AzureADProfile","user","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","map","group","index","isPreview","label","Footer","List","columns","ListItem","Copyright","HeroBanner","heroBannerDocumentRef","heroBannerDocument","heading","summaryText","Heading","Text","MenuLink","item","NavItem","name","disabled","Logout","action","method","secondary","Menu","BrComponentContext","currentUrl","toJSON","renderLogoutButton","endsWith","channels","process","split","logoUrl","forEach","channel","indexOf","menu","headerTheme","orgName","orgSplit","orgDescriptor","white","whiteHeaderBg","Container","Logo","Content","MenuToggle","Search","Nav","className","siteMenuItems","SharepointFiles","sharepointSiteFiles","Object","keys","url","target","fileType","modifiedBy","Date","modifiedDate","toUTCString","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","path","liveCMSBaseUrl","previewCMSBaseUrl","siteContextRemovedPath","location","pathname","startsWith","replace","substring","length","configuration","httpClient","options","live","cmsBaseUrl","spaBaseUrl","preview","search","mapping","role","id","to","document","getElementById"],"mappings":"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","file":"static/js/main.f840cebc.chunk.js","sourcesContent":["import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Panel, ContentsList } from \"nhsuk-react-components\";\n\nexport function Article(props: BrProps) {\n  const { articleDocument: articleDocumentRef } = props.component.getModels();\n  const articleDocument = articleDocumentRef && props.page.getContent(articleDocumentRef);\n  const page = React.useContext(BrPageContext);\n\n  if (!articleDocument || !page) {\n    return null;\n  }\n\n  const { title, summary, relatedNews } = articleDocument.getData<DocumentData>();\n\n  // Builds Related Articles Links\n  let relatedLinks: any[] = [];\n  for (let relatedNewsRef of relatedNews) {\n    const relatedArticleDocument = relatedNewsRef && props.page.getContent(relatedNewsRef);\n\n    if (!relatedArticleDocument) {\n      continue;\n    }\n\n    const { title, _links } = relatedArticleDocument.getData<DocumentData>();\n\n    let relatedArticleUrl = relatedArticleDocument.getUrl();\n    if (_links?.site.type === 'internal') {\n      relatedArticleUrl = _links?.site!.href;\n    }\n\n    relatedLinks.push(\n      <ContentsList.Item href={relatedArticleUrl} key={relatedArticleUrl}>\n        {title}\n      </ContentsList.Item>\n    );\n  }\n\n  return (\n    <>\n      <Panel>\n        <h2>{ title }</h2>\n        <div dangerouslySetInnerHTML={{ __html: summary.value }} />\n      </Panel>\n      <ContentsList>\n        <h3>Related Articles</h3>\n        { relatedLinks }\n      </ContentsList>\n    </>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\ninterface UserProps {\n  displayName: string,\n  username: string,\n  jobTitle: string,\n  groups: string[]\n}\n\nexport function AzureADProfile(props: BrProps) {\n  const { user }: { user: UserProps } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group, index) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Hero } from \"nhsuk-react-components\";\n\nexport function HeroBanner(props: BrProps) {\n  const { heroBannerDocument: heroBannerDocumentRef } = props.component.getModels();\n  const heroBannerDocument = heroBannerDocumentRef && props.page.getContent(heroBannerDocumentRef);\n\n  if (!heroBannerDocument) {\n    return null;\n  }\n\n  const { heading, summaryText } = heroBannerDocument.getData<DocumentData>();\n\n  return (\n    <Hero>\n      <Hero.Heading>{ heading }</Hero.Heading>\n      <Hero.Text>{ summaryText }</Hero.Text>\n    </Hero>\n  );\n}\n","import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form } from \"nhsuk-react-components\";\n\ninterface HeaderTheme {\n  whiteHeaderBg: boolean,\n  orgName: string,\n  orgSplit: string,\n  orgDescriptor: string\n}\n\ninterface HeaderThemeModels {\n  headerTheme: HeaderTheme\n}\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  return <Header.NavItem href={item._links.site.href}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  const currentUrl = page.toJSON()!._links!.site.href;\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page` page\n  let renderLogoutButton = false;\n  if (currentUrl.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  // Builds logo url based on current page path\n  const channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n  let logoUrl = '/site';\n  channels.forEach((channel) => {\n    if (currentUrl.indexOf('/site/' + channel) !== -1 || currentUrl.indexOf('/site/_cmsinternal/' + channel) !== -1) {\n      logoUrl = '/site/' + channel;\n    }\n  });\n\n  const { menu } = component.getModels<MenuModels>();\n  const { headerTheme } = component.getModels<HeaderThemeModels>();\n\n  return (\n    <Header orgName={ headerTheme.orgName } orgSplit={ headerTheme.orgSplit } orgDescriptor={headerTheme.orgDescriptor!} white={ headerTheme.whiteHeaderBg }>\n      <Header.Container>\n        <Header.Logo href={ logoUrl} />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search />\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} />\n        )) }\n      </Header.Nav>\n    </Header>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage } from '@bloomreach/react-sdk';\nimport { Article, AzureADProfile, Footer, HeroBanner, Menu, SharepointFiles } from './components';\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  var channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n\n  var liveCMSBaseUrl = process.env.REACT_APP_LIVE_BR_BASE_URL!;\n  var previewCMSBaseUrl = process.env.REACT_APP_PREVIEW_BR_BASE_URL!;\n  var siteContextRemovedPath = props.location.pathname;\n\n  channels.forEach((channel) => {\n    if (props.location.pathname.startsWith('/site/' + channel)) {\n      // Appending channel to live cmsBaseUrl\n      liveCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/' + channel, '');\n    }\n\n    if (props.location.pathname.startsWith('/site/_cmsinternal/' + channel)) {\n      // Appending channel to preview cmsBaseUrl\n      previewCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/_cmsinternal/' + channel, '/site/_cmsinternal');\n    }\n  });\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  if (siteContextRemovedPath.startsWith('/site') && !siteContextRemovedPath.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: liveCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: previewCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      path: `${siteContextRemovedPath}${props.location.search}`,\n    },\n  };\n  const mapping = { Article, 'AzureAD Profile': AzureADProfile, 'Hero Banner': HeroBanner, 'Sharepoint Files': SharepointFiles };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <BrComponent path=\"hero\" />\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          {/* <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n            ) }\n          </BrPageContext.Consumer> */}\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}