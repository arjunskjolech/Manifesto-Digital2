{"version":3,"sources":["components/Article.tsx","components/AzureADProfile.tsx","components/Footer.tsx","components/HeroBanner.tsx","components/Menu.tsx","components/SharepointFiles.tsx","components/SearchPagination.tsx","components/Search.tsx","App.tsx","index.tsx"],"names":["Article","props","articleDocumentRef","component","getModels","document","articleDocument","page","getContent","React","useContext","BrPageContext","getData","title","summary","relatedNews","relatedLinks","relatedNewsRef","relatedArticleDocument","_links","relatedArticleUrl","getUrl","site","type","href","push","Item","key","dangerouslySetInnerHTML","__html","value","length","AzureADProfile","user","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","map","group","index","isPreview","label","Footer","List","columns","ListItem","Copyright","HeroBanner","heroBannerDocumentRef","heroBannerDocument","heading","summaryText","Heading","Text","MenuLink","item","NavItem","name","disabled","Logout","action","method","secondary","Menu","BrComponentContext","currentUrl","toJSON","renderLogoutButton","endsWith","channels","process","split","logoUrl","forEach","channel","indexOf","menu","headerTheme","orgName","orgSplit","orgDescriptor","white","whiteHeaderBg","Container","Logo","Content","MenuToggle","Search","Nav","className","siteMenuItems","SharepointFiles","sharepointSiteFiles","Object","keys","url","target","fileType","modifiedBy","Date","modifiedDate","toUTCString","SearchPagination","onChange","event","preventDefault","refine","prevButton","nextButton","this","currentRefinement","nbPages","createURL","prevPage","Link","previous","onClick","nextPage","next","style","minWidth","Component","connectPagination","indexName","getParameters","appId","apiKey","console","log","searchClient","algoliasearch","rel","integrity","crossOrigin","InstantSearch","CustomRefinementList","attribute","Configure","hitsPerPage","SearchBox","submit","reset","CustomSortBy","defaultRefinement","items","CustomStats","CustomHits","connectHits","hits","hit","objectID","path","Highlight","Snippet","connectRefinementList","Box","count","connectStats","nbHits","paddingLeft","paddingBottom","connectSortBy","fontSize","Option","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","liveCMSBaseUrl","previewCMSBaseUrl","siteContextRemovedPath","location","pathname","startsWith","replace","substring","configuration","httpClient","options","live","cmsBaseUrl","spaBaseUrl","preview","search","mapping","role","id","to","getElementById"],"mappings":"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","file":"static/js/main.d34e5181.chunk.js","sourcesContent":["import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Panel, ContentsList } from \"nhsuk-react-components\";\n\nexport function Article(props: BrProps) {\n  const { document: articleDocumentRef } = props.component.getModels();\n  const articleDocument = articleDocumentRef && props.page.getContent(articleDocumentRef)!;\n  const page = React.useContext(BrPageContext);\n\n  if (!articleDocument || !page) {\n    return null;\n  }\n\n  const { title, summary, relatedNews } = articleDocument.getData<DocumentData>();\n\n  // Builds Related Articles Links\n  let relatedLinks: any[] = [];\n  for (let relatedNewsRef of relatedNews) {\n    const relatedArticleDocument = relatedNewsRef && props.page.getContent(relatedNewsRef);\n\n    if (!relatedArticleDocument) {\n      continue;\n    }\n\n    const { title, _links } = relatedArticleDocument.getData<DocumentData>();\n\n    let relatedArticleUrl = relatedArticleDocument.getUrl();\n    if (_links?.site.type === 'internal') {\n      relatedArticleUrl = _links?.site!.href;\n    }\n\n    relatedLinks.push(\n      <ContentsList.Item href={relatedArticleUrl} key={relatedArticleUrl}>\n        {title}\n      </ContentsList.Item>\n    );\n  }\n\n  return (\n    <>\n      <Panel>\n        <h2>{ title }</h2>\n        <div dangerouslySetInnerHTML={{ __html: summary.value }} />\n      </Panel>\n      {relatedLinks.length > 0 &&\n        <ContentsList>\n          <h3>Related Articles</h3>\n          { relatedLinks }\n        </ContentsList>\n      }\n    </>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\ninterface UserProps {\n  displayName: string,\n  username: string,\n  jobTitle: string,\n  groups: string[]\n}\n\nexport function AzureADProfile(props: BrProps) {\n  const { user }: { user: UserProps } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group, index) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Hero } from \"nhsuk-react-components\";\n\nexport function HeroBanner(props: BrProps) {\n  const { heroBannerDocument: heroBannerDocumentRef } = props.component.getModels();\n  const heroBannerDocument = heroBannerDocumentRef && props.page.getContent(heroBannerDocumentRef);\n\n  if (!heroBannerDocument) {\n    return null;\n  }\n\n  const { heading, summaryText } = heroBannerDocument.getData<DocumentData>();\n\n  return (\n    <Hero>\n      <Hero.Heading>{ heading }</Hero.Heading>\n      <Hero.Text>{ summaryText }</Hero.Text>\n    </Hero>\n  );\n}\n","import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form } from \"nhsuk-react-components\";\n\ninterface HeaderTheme {\n  whiteHeaderBg: boolean,\n  orgName: string,\n  orgSplit: string,\n  orgDescriptor: string\n}\n\ninterface HeaderThemeModels {\n  headerTheme: HeaderTheme\n}\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  return <Header.NavItem href={item._links.site.href}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  const currentUrl = page.toJSON()!._links!.site.href;\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page` page\n  let renderLogoutButton = false;\n  if (currentUrl.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  // Builds logo url based on current page path\n  const channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n  let logoUrl = '/site';\n  channels.forEach((channel) => {\n    if (currentUrl.indexOf('/site/' + channel) !== -1 || currentUrl.indexOf('/site/_cmsinternal/' + channel) !== -1) {\n      logoUrl = '/site/' + channel;\n    }\n  });\n\n  const { menu } = component.getModels<MenuModels>();\n  const { headerTheme } = component.getModels<HeaderThemeModels>();\n\n  return (\n    <Header orgName={ headerTheme.orgName } orgSplit={ headerTheme.orgSplit } orgDescriptor={headerTheme.orgDescriptor!} white={ headerTheme.whiteHeaderBg }>\n      <Header.Container>\n        <Header.Logo href={ logoUrl} />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search action={\"/site/search\"}/>\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} />\n        )) }\n      </Header.Nav>\n    </Header>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import {connectPagination} from 'react-instantsearch-dom';\nimport React, {Component} from 'react';\nimport {Pagination} from \"nhsuk-react-components\";\n\ninterface PaginationProps {\n    currentRefinement: number,\n    nbPages: number,\n    refine: any,\n    createURL: any\n}\n\nclass SearchPagination extends Component<PaginationProps> {\n\n    onChange = (event: any, page: number) => {\n        event.preventDefault();\n        return this.props.refine(page);\n    };\n\n    render() {\n        let {currentRefinement, nbPages, createURL} = this.props;\n\n        let prevButton;\n        if (currentRefinement > 1) {\n            const prevPage = currentRefinement - 1;\n\n            prevButton =\n                <Pagination.Link previous href={createURL(prevPage)}\n                                 onClick={(event) => this.onChange(event, prevPage)}>\n                    Page {prevPage} of {nbPages}\n                </Pagination.Link>;\n        }\n\n        let nextButton;\n        if (currentRefinement < nbPages) {\n            const nextPage = currentRefinement + 1;\n\n            nextButton =\n                <Pagination.Link next href={createURL(nextPage)} onClick={(event) => this.onChange(event, nextPage)}>\n                    Page {nextPage} of {nbPages}\n                </Pagination.Link>;\n        }\n        return (\n            <div style={{minWidth: 400}}>\n                <Pagination>\n                    {prevButton}\n                    {nextButton}\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nexport default connectPagination(SearchPagination);\n","import algoliasearch from 'algoliasearch/lite';\nimport {\n    InstantSearch,\n    Configure,\n    SearchBox,\n    connectRefinementList,\n    connectHits,\n    Snippet,\n    connectStats,\n    connectSortBy,\n    Highlight,\n} from 'react-instantsearch-dom';\nimport * as React from 'react';\nimport './Search.css';\nimport {CloseIcon, SearchIcon} from \"nhsuk-react-components\";\nimport {Hit, HitsProvided, RefinementListProvided} from \"react-instantsearch-core\";\nimport Checkboxes from \"nhsuk-react-components/lib/components/checkboxes\";\nimport Pagination from \"./SearchPagination\";\nimport Select from \"nhsuk-react-components/lib/components/select\";\nimport {BrProps} from \"@bloomreach/react-sdk\";\n\nexport function Search(props: BrProps) {\n\n    const indexName = props.component.getParameters()['indexName'] || '';\n    const appId = props.component.getParameters()['appId'] || '';\n    const apiKey = props.component.getParameters()['apiKey'] || '';\n\n    if (!indexName || !apiKey || !appId) {\n        console.log(\"Search component is not configured correctly!\");\n        return null;\n    }\n\n    const searchClient = algoliasearch(appId, apiKey);\n\n    return (\n        <div className=\"nhsuk-width-container\">\n            <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/reset-min.css'\n                  integrity='sha256-t2ATOGCtAIZNnzER679jwcFcKYfLlw01gli6F6oszk8=' crossOrigin='anonymous'/>\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/algolia-min.css\"\n                  integrity=\"sha256-HB49n/BZjuqiCtQQf49OdZn63XuKFaxcIHWf0HNKte8=\" crossOrigin=\"anonymous\"/>\n\n            <InstantSearch searchClient={searchClient} indexName={indexName}>\n                <div className=\"left-panel\">\n                    <div className=\"custom-refinement-section\">\n                        <div className=\"custom-refinement-list\">\n                            <h5>Category</h5>\n                            <CustomRefinementList attribute=\"category\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Region</h5>\n                            <CustomRefinementList attribute=\"region\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Speciality</h5>\n                            <CustomRefinementList attribute=\"speciality\"/>\n                        </div>\n                    </div>\n                    <Configure hitsPerPage={5}/>\n                </div>\n                <div className=\"right-panel\">\n                    <div className=\"custom-search\">\n                        <SearchBox submit={<SearchIcon/>} reset={<CloseIcon/>}/>\n                    </div>\n                    <CustomSortBy\n                        defaultRefinement=\"articles\"\n                        items={[\n                            {value: 'articles', label: 'Relevance'},\n                            {value: 'articles_date_desc', label: 'Most recently modified'}\n                        ]}\n                    />\n                    <CustomStats/>\n                    <CustomHits/>\n                    <Pagination/>\n                </div>\n            </InstantSearch>\n        </div>\n    );\n}\n\nconst Hits = ({hits}: HitsProvided<Hit>) => (\n    <div>\n        <ul className=\"nhsuk-list nhsuk-list--border\">\n            {hits.map(hit => (\n                <div key={hit.objectID}>\n                    <li>\n                        <h2 className=\"nhsuk-u-margin-bottom-1\" style={{\"fontWeight\": 400, \"fontSize\": \"19px\"}}>\n                            <a\n                                className=\"app-search-results-item\" href={`/site/${hit.path}`}>\n                                <Highlight attribute=\"title\" hit={hit}/>\n                            </a>\n                        </h2>\n                        <p className=\"nhsuk-body-s nhsuk-u-margin-top-1\">\n                            <Highlight attribute=\"introduction\" hit={hit}/>\n                            <Snippet hit={hit} attribute=\"summary\"/>;\n                            <strong>\n                                <Highlight attribute=\"category\" hit={hit}/>\n                            </strong>\n                        </p>\n                    </li>\n                </div>\n            ))}\n        </ul>\n    </div>\n);\n\nconst CustomHits = connectHits(Hits);\n\nconst RefinementList = ({items, refine}: RefinementListProvided) => (\n    <Checkboxes>\n        {items.map(item => (\n            <Checkboxes.Box\n                key={item.label}\n                onClick={() => {\n                    return refine(item.value);\n                }}\n            >\n                {item.label} ({item.count})\n            </Checkboxes.Box>\n        ))}\n    </Checkboxes>\n);\n\nconst CustomRefinementList = connectRefinementList(RefinementList);\n\ninterface StatsProvided {\n    nbHits: number;\n    processingTimeMS: number;\n}\n\nconst Stats = ({nbHits}: StatsProvided) => (\n    <p className=\"nhsuk-body-s nhsuk-u-margin-bottom-3\" style={{paddingLeft: \"65%\", paddingBottom: '20px'}}>\n        Found <b>{nbHits}</b> matching results.\n    </p>\n);\nconst CustomStats = connectStats(Stats);\n\n\nconst SortBy = ({items, refine, createURL}: any) => (\n    <Select\n        label=\"Sort by\"\n        onChange={(event: any) => {\n            event.preventDefault();\n            refine(event.target.value)\n        }}\n        style={{fontSize: \"16px\"}}\n    >\n        {items.map((item: { value: string, label: string, isRefined: boolean }) => (\n            <Select.Option\n                key={item.value}\n                value={item.value}\n                href={createURL(item.value)}>\n                {item.label}\n            </Select.Option>\n        ))}\n    </Select>\n);\n\nconst CustomSortBy = connectSortBy(SortBy);","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage } from '@bloomreach/react-sdk';\nimport { Article, AzureADProfile, Footer, HeroBanner, Menu, SharepointFiles, Search} from './components';\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  var channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n\n  var liveCMSBaseUrl = process.env.REACT_APP_LIVE_BR_BASE_URL!;\n  var previewCMSBaseUrl = process.env.REACT_APP_PREVIEW_BR_BASE_URL!;\n  var siteContextRemovedPath = props.location.pathname;\n\n  channels.forEach((channel) => {\n    if (props.location.pathname.startsWith('/site/' + channel)) {\n      // Appending channel to live cmsBaseUrl\n      liveCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/' + channel, '');\n    }\n\n    if (props.location.pathname.startsWith('/site/_cmsinternal/' + channel)) {\n      // Appending channel to preview cmsBaseUrl\n      previewCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/_cmsinternal/' + channel, '/site/_cmsinternal');\n    }\n  });\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  if (siteContextRemovedPath.startsWith('/site') && !siteContextRemovedPath.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: liveCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: previewCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      path: `${siteContextRemovedPath}${props.location.search}`,\n    },\n  };\n  const mapping = { Article, 'AzureAD Profile': AzureADProfile, 'Hero Banner': HeroBanner, 'Sharepoint Files': SharepointFiles, Search };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <BrComponent path=\"hero\" />\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          {/* <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n            ) }\n          </BrPageContext.Consumer> */}\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}