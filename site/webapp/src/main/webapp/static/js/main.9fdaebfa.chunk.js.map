{"version":3,"sources":["components/Article.tsx","components/AzureADProfile.tsx","components/Breadcrumb.tsx","components/EducationHubDocPromoCards.tsx","components/Footer.tsx","components/HeroBanner.tsx","components/Menu.tsx","components/PageContent.tsx","components/ProgrammeListing.tsx","components/ProgrammeListingByAPI.tsx","components/ProgrammePageContent.tsx","components/ProgrammePageContentByAPI.tsx","components/SearchPagination.tsx","components/Search.tsx","components/SharepointFiles.tsx","components/TrainingByLocalTeams.tsx","App.tsx","index.tsx"],"names":["Article","props","articleDocumentRef","component","getModels","document","articleDocument","page","getContent","React","useContext","BrPageContext","getData","title","summary","relatedNews","relatedLinks","relatedNewsRef","relatedArticleDocument","_links","relatedArticleUrl","getUrl","site","type","href","push","Item","key","dangerouslySetInnerHTML","__html","value","length","AzureADProfile","user","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","map","group","index","isPreview","label","Breadcrumb","breadCrumbLinks","link","url","EducationHubDocPromoCards","documents","promoCards","promoGroupCards","entries","docRef","doc","abstract","imageRef","image","cardUrl","imageSrc","Heading","Description","j","style","visibility","Group","Footer","List","columns","ListItem","Copyright","HeroBanner","heroBannerDocumentRef","heroBannerDocument","heading","summaryText","Text","MenuLink","item","channelType","NavItem","disabled","name","menuUrl","replace","Logout","action","method","secondary","Menu","BrComponentContext","currentUrl","toJSON","renderLogoutButton","endsWith","channels","process","split","logoUrl","forEach","channel","indexOf","menu","headerTheme","orgName","orgSplit","orgDescriptor","white","whiteHeaderBg","Container","Logo","Content","MenuToggle","Search","Nav","className","siteMenuItems","PanelCard","cardData","linkLabel","linkUrl","PromoCard","undefined","imageUrl","CareCard","Section","card","mainLink","section","cardType","cardDoc","cardDocument","cardImage","cardTitle","cardSummary","cardLinkLabel","cardLinkUrl","mainLinkLabel","mainLinkUrl","mainLinkType","mainLinkDisabled","width","mainBody","PageContent","documentRef","sections","ProgrammeListing","programmeListingTitle","programmes","useState","region","setRegion","subSpecialty","setSubSpecialty","programmeRegions","Set","programme","regionName","regionSelectBox","regionSelectOptions","unshift","Option","id","onChange","event","target","programmeSubSpecialties","subSpecialtySelectBox","subSpecialtySelectOptions","subSpecialtyName","filteredProgrammes","filter","programmeTableRows","programmePageUrl","regionPageUrl","durationInYears","contractType","numberOfVacancies","reopeningCalendar","status","Date","toLocaleString","year","month","Cell","visuallyHiddenText","color","fontWeight","Panel","Head","Body","ProgrammeListingByAPI","currentPageType","specialty","self","programmePageUrlPathPrefix","toLowerCase","getFormattedDateForProgrammeStatus","time","ProgrammeDetails","trainingType","model","competitionRatio","educationType","entryRequirementsLinkUrl","gmcNTSScore","partTimeContractType","qualification","totalPosts","programmeStatus","getProgrammeStatus","educationTypeLabel","getEducationTypeLabel","partTimeContactType","partTimeContactTypeLabel","getPartTimeContactTypeLabel","qualificationType","qualificationTypeLabel","getQualificationTypeLabel","KeyStaffs","keyStaffs","keyStaffPanelGroups","keyStaffPanels","keyStaffRef","keyStaffDoc","department","src","alt","srcSet","additionalSections","sectionIndex","programmeSections","renderProgrammeDetails","renderKeyStaffSectionBelowThisSection","ProgrammePageContent","Legend","isPageHeading","keyStaff","cardImageUrl","ProgrammePageContentByAPI","SearchPagination","preventDefault","refine","prevButton","nextButton","this","currentRefinement","nbPages","createURL","prevPage","Link","previous","onClick","nextPage","next","minWidth","Component","connectPagination","indexName","getParameters","appId","apiKey","console","log","searchClient","algoliasearch","rel","integrity","crossOrigin","InstantSearch","CustomRefinementList","attribute","Configure","hitsPerPage","SearchBox","submit","reset","CustomSortBy","defaultRefinement","items","CustomStats","CustomHits","connectHits","hits","hit","objectID","path","Highlight","Snippet","connectRefinementList","Box","count","connectStats","nbHits","paddingLeft","paddingBottom","connectSortBy","fontSize","SharepointFiles","sharepointSiteFiles","Object","keys","fileType","modifiedBy","modifiedDate","toUTCString","TrainingByLocalTeams","trainingByLocalTeamsTitle","trainingByLocalTeamsLinks","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","liveCMSBaseUrl","previewCMSBaseUrl","siteContextRemovedPath","location","pathname","startsWith","substring","configuration","httpClient","options","live","cmsBaseUrl","spaBaseUrl","preview","search","mapping","EducationHubListing","SubHubListing","TrainingByLearningStage","role","to","getElementById"],"mappings":"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","file":"static/js/main.9fdaebfa.chunk.js","sourcesContent":["import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Panel, ContentsList } from \"nhsuk-react-components\";\n\nexport function Article(props: BrProps) {\n  const { document: articleDocumentRef } = props.component.getModels();\n  const articleDocument = articleDocumentRef && props.page.getContent(articleDocumentRef)!;\n  const page = React.useContext(BrPageContext);\n\n  if (!articleDocument || !page) {\n    return null;\n  }\n\n  const { title, summary, relatedNews } = articleDocument.getData<DocumentData>();\n\n  // Builds Related Articles Links\n  let relatedLinks: any[] = [];\n  for (let relatedNewsRef of relatedNews) {\n    const relatedArticleDocument = relatedNewsRef && props.page.getContent(relatedNewsRef);\n\n    if (!relatedArticleDocument) {\n      continue;\n    }\n\n    const { title, _links } = relatedArticleDocument.getData<DocumentData>();\n\n    let relatedArticleUrl = relatedArticleDocument.getUrl();\n    if (_links?.site.type === 'internal') {\n      relatedArticleUrl = _links?.site!.href;\n    }\n\n    relatedLinks.push(\n      <ContentsList.Item href={relatedArticleUrl} key={relatedArticleUrl}>\n        {title}\n      </ContentsList.Item>\n    );\n  }\n\n  return (\n    <>\n      <Panel>\n        <h2>{ title }</h2>\n        <div dangerouslySetInnerHTML={{ __html: summary.value }} />\n      </Panel>\n      {relatedLinks.length > 0 &&\n        <ContentsList>\n          <h3>Related Articles</h3>\n          { relatedLinks }\n        </ContentsList>\n      }\n    </>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\ninterface UserProps {\n  displayName: string,\n  username: string,\n  jobTitle: string,\n  groups: string[]\n}\n\nexport function AzureADProfile(props: BrProps) {\n  const { user }: { user: UserProps } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group, index) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import React from 'react';\nimport {BrProps} from '@bloomreach/react-sdk';\nimport {Breadcrumb as NHSUKBreadCrumb} from \"nhsuk-react-components\";\n\nexport function Breadcrumb(props: BrProps) {\n  const {breadCrumbLinks} = props.component.getModels();\n\n  if (!breadCrumbLinks) {\n    return null;\n  }\n\n  return (\n    <NHSUKBreadCrumb>\n      {breadCrumbLinks.map((link: Link, index: string | number | undefined) => {\n        return (\n          <NHSUKBreadCrumb.Item key={index} href={link.url}>{link.label}</NHSUKBreadCrumb.Item>\n        )\n      })}\n    </NHSUKBreadCrumb>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {Promo} from \"nhsuk-react-components\";\n\nexport function EducationHubDocPromoCards(props: BrProps) {\n  const {title, documents} = props.component.getModels();\n\n  if (!documents) {\n    return null;\n }\n\n  // Builds promo cards\n  let promoCards = [];\n  let promoGroupCards = [];\n  for (const [index, docRef] of documents.entries()) {\n    const doc = docRef && props.page.getContent(docRef);\n\n    if (!doc) {\n      continue;\n   }\n\n    const {title, abstract, image: imageRef, _links} = doc.getData<DocumentData>();\n\n    const image = imageRef && props.page.getContent(imageRef);\n\n    let cardUrl = doc.getUrl();\n    if (_links?.site.type === 'internal') {\n      cardUrl = _links?.site!.href;\n   }\n\n    promoCards.push(\n      <Promo\n        key={index}\n        href={cardUrl}\n        imageSrc={image?.getUrl()}\n      >\n        <Promo.Heading>{title}</Promo.Heading>\n        <Promo.Description>{abstract}</Promo.Description>\n      </Promo>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === documents.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          promoCards.push(\n            <Promo key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Promo>\n          );\n       }\n     }\n\n      promoGroupCards.push(\n        <Promo.Group key={(index + 1) / 3}>\n          {promoCards}\n        </Promo.Group>\n      );\n\n      promoCards = [];\n   }\n }\n\n  return (\n    <>\n      <h2>{title}</h2>\n      {promoGroupCards}\n      <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Hero } from \"nhsuk-react-components\";\n\nexport function HeroBanner(props: BrProps) {\n  const { heroBannerDocument: heroBannerDocumentRef } = props.component.getModels();\n  const heroBannerDocument = heroBannerDocumentRef && props.page.getContent(heroBannerDocumentRef);\n\n  if (!heroBannerDocument) {\n    return null;\n  }\n\n  const { heading, image: imageRef, summaryText } = heroBannerDocument.getData<DocumentData>();\n\n  const image = imageRef && props.page.getContent(imageRef);\n\n  return (\n    <>\n    <Hero imageSrc={ image?.getUrl() }>\n      <Hero.Heading>{ heading }</Hero.Heading>\n      <Hero.Text>{ summaryText }</Hero.Text>\n    </Hero>\n    <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form } from \"nhsuk-react-components\";\n\ninterface HeaderTheme {\n  whiteHeaderBg: boolean,\n  orgName: string,\n  orgSplit: string,\n  orgDescriptor: string\n  channelType: string\n}\n\ninterface HeaderThemeModels {\n  headerTheme: HeaderTheme\n}\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink(props: any) {\n  const {item, channelType} = props;\n\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  let menuUrl = item._links.site.href;\n  if ('education-hub' === channelType) {\n    // Temporary hack to remove education-hub channel specific context\n    // so that it would use global channel context\n    // (as education-hub menu are essentially being inherited from global channel)\n    menuUrl = menuUrl.replace(/site\\/([^\\/]+)/g, 'site');\n  }\n\n  return <Header.NavItem href={menuUrl}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  const currentUrl = page.toJSON()!._links!.site.href;\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page` page\n  let renderLogoutButton = false;\n  if (currentUrl.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  // Builds logo url based on current page path\n  const channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n  let logoUrl = '/site';\n  channels.forEach((channel) => {\n    if (currentUrl.indexOf('/site/' + channel) !== -1 || currentUrl.indexOf('/site/_cmsinternal/' + channel) !== -1) {\n      logoUrl = '/site/' + channel;\n    }\n  });\n\n  const { menu } = component.getModels<MenuModels>();\n  const { headerTheme } = component.getModels<HeaderThemeModels>();\n\n  return (\n    <>\n    <Header orgName={ headerTheme.orgName } orgSplit={ headerTheme.orgSplit } orgDescriptor={headerTheme.orgDescriptor!} white={ headerTheme.whiteHeaderBg }>\n      <Header.Container>\n        <Header.Logo href={ logoUrl} />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search action={\"/site/search\"}/>\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} channelType={headerTheme.channelType}/>\n        )) }\n      </Header.Nav>\n    </Header>\n    </>\n  );\n}\n","import {BrProps, BrPageContext} from \"@bloomreach/react-sdk\";\nimport React from \"react\";\nimport {\n  ActionLink,\n  Container,\n  Row,\n  Col,\n  Promo,\n  Panel,\n  CareCard as NHSUKCareCard,\n  Button\n} from \"nhsuk-react-components\";\n\ninterface CardData {\n  title: string;\n  imageUrl: string | undefined;\n  summary: string;\n  linkLabel: string;\n  linkUrl: string | undefined;\n}\n\nfunction PanelCard(cardData: CardData) {\n  return (\n    <Panel.Group>\n      <Panel>\n        <h3>{cardData.title}</h3>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        {cardData.linkLabel && cardData.linkUrl && (\n          <ActionLink href={cardData.linkUrl}>\n            {cardData.linkLabel}\n          </ActionLink>\n        )}\n      </Panel>\n    </Panel.Group>\n  );\n}\n\nfunction PromoCard(cardData: CardData) {\n  return (\n    <Promo.Group>\n      <Promo\n        href={cardData.linkUrl || undefined}\n        imageSrc={cardData.imageUrl || undefined}\n      >\n        <Promo.Heading>{cardData.title}</Promo.Heading>\n        <Promo.Description dangerouslySetInnerHTML={{__html: cardData.summary}}>\n        </Promo.Description>\n      </Promo>\n    </Promo.Group>\n  );\n}\n\nfunction CareCard(cardData: CardData) {\n  return (\n    <NHSUKCareCard type=\"urgent\">\n      <NHSUKCareCard.Heading>{cardData.title}</NHSUKCareCard.Heading>\n      <NHSUKCareCard.Content>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n      </NHSUKCareCard.Content>\n    </NHSUKCareCard>\n  );\n}\n\nfunction Section({section} : any) {\n  const page = React.useContext(BrPageContext);\n\n  if (!page) {\n    return null;\n  }\n\n  let card;\n\n  if (section.cardType) {\n\n    // Builds CardData\n    let cardData = {} as CardData;\n    const cardDoc = section.cardDocument && page.getContent(section.cardDocument);\n\n    if (cardDoc) {\n      const {title, image: imageRef, abstract, _links} = cardDoc.getData<DocumentData>();\n\n      cardData.title = cardData.linkLabel = title;\n\n      const cardImage = imageRef && page?.getContent(imageRef);\n      cardData.imageUrl = cardImage?.getUrl();\n      cardData.summary = '<p>' + abstract + '</p>';\n      cardData.linkLabel = title;\n\n      cardData.linkUrl = cardDoc.getUrl();\n      if (_links?.site.type === 'internal') {\n        cardData.linkUrl = _links?.site!.href;\n     }\n   }\n\n    cardData.title = section.cardTitle || cardData.title;\n    if (!cardData.imageUrl) {\n      const cardImage = section.cardImage && page.getContent(section.cardImage);\n      cardData.imageUrl = cardImage?.getUrl();\n    }\n    cardData.summary = section.cardSummary || cardData.summary;\n    cardData.linkLabel = section.cardLinkLabel || cardData.linkLabel;\n    cardData.linkUrl = section.cardLinkUrl || cardData.linkUrl;\n\n    switch (section.cardType) {\n      case \"promo\":\n        card = <PromoCard  {...cardData} />;\n        break;\n      case \"care\":\n        card = <CareCard {...cardData} />;\n        break;\n      case \"panel\":\n      default:\n        card = <PanelCard {...cardData} />;\n   }\n }\n\n  let mainLink;\n\n  if (section.mainLinkLabel && section.mainLinkUrl) {\n    const mainLinkType = section.mainLinkType ? section.mainLinkType : 'actionLink';\n\n    switch (mainLinkType) {\n      case \"primaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled}>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"secondaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled} secondary>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"actionLink\":\n      default:\n        mainLink =\n          <ActionLink href={section.mainLinkUrl}>\n            {section.mainLinkLabel}\n          </ActionLink>\n   }\n }\n\n  return (\n    <Row>\n      <Col width=\"two-thirds\">\n        <div dangerouslySetInnerHTML={{__html: section.mainBody.value}} />\n        {mainLink}\n      </Col>\n      <Col width=\"one-third\">{card}</Col>\n    </Row>\n  );\n}\n\nexport function PageContent(props: BrProps) {\n  const {document: documentRef} = props.component.getModels();\n  const document = documentRef && props.page.getContent(documentRef);\n\n  if (!document) {\n    return null;\n }\n\n  const {sections} = document.getData<DocumentData>();\n\n  return (\n    <>\n      <Container>\n      {sections.map((section: any, index: number) => (\n        <Section key={index} section={section} />\n      ))}\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {\n  Col,\n  Container,\n  ErrorMessage,\n  Panel,\n  Row,\n  Select,\n  Table\n} from \"nhsuk-react-components\";\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\ninterface Programme {\n  contractType: string,\n  durationInYears: number,\n  numberOfVacancies: number,\n  programmePageUrl: string,\n  regionName: string,\n  regionPageUrl: string,\n  reopeningCalendar: number,\n  subSpecialty: string\n}\n\n/* function ProgrammeTabelPanel(programmes: any[]) {\n  let programmeTableRows = [];\n  for (const [index, {\n    subSpecialty,\n    programmePageUrl,\n    regionName,\n    regionPageUrl,\n    durationInYears,\n    contractType,\n    numberOfVacancies,\n    reopeningCalendar\n  }] of programmes.entries()) {\n\n    let status = 'Open';\n    if (!numberOfVacancies) {\n      status = 'Closed';\n    }\n\n    if (!numberOfVacancies && reopeningCalendar) {\n      status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n    }\n\n    programmeTableRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>\n          <a href={programmePageUrl}>{subSpecialty} at {regionName}</a>\n        </Table.Cell>\n        <Table.Cell>\n          <a href={regionPageUrl}>{regionName}</a>\n        </Table.Cell>\n        <Table.Cell>{durationInYears} Years, {contractType}</Table.Cell>\n        <Table.Cell>\n          {numberOfVacancies === 0\n            ? <ErrorMessage visuallyHiddenText={status}>\n                {status}\n              </ErrorMessage>\n            : <span style={{color: 'green', fontWeight: 600}}>\n                {status}\n              </span>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <Table.Panel>\n      <Table>\n        <Table.Head>\n          <Table.Row>\n            <Table.Cell>Training programme</Table.Cell>\n            <Table.Cell>Local team</Table.Cell>\n            <Table.Cell>Duration</Table.Cell>\n            <Table.Cell>Status</Table.Cell>\n          </Table.Row>\n        </Table.Head>\n        <Table.Body>{programmeTableRows}</Table.Body>\n      </Table>\n    </Table.Panel>\n  );\n} */\n\nexport function ProgrammeListing(props: BrProps) {\n  const { programmeListingTitle, programmes } = props.component.getModels();\n\n  const [region, setRegion] = React.useState<string>('All');\n  const [subSpecialty, setSubSpecialty] = React.useState<string>('All');\n\n  if (!programmes) {\n    return null;\n  }\n\n  // Builds region select box component\n  const programmeRegions = [...new Set(programmes.map((programme: Programme) => programme.regionName))] as string[];\n\n  let regionSelectBox = [];\n  let regionSelectOptions = [];\n  if (programmeRegions && programmeRegions.length > 1) {\n    programmeRegions.unshift('All');\n\n    for (const [index, regionName] of programmeRegions.entries()) {\n      regionSelectOptions.push(\n        <Select.Option key={index} value={regionName}>\n          {regionName}\n        </Select.Option>\n      );\n    }\n\n    regionSelectBox.push(\n      <Select\n        key=\"region\"\n        id=\"region\"\n        label=\"Filter by Local Team\"\n        onChange={event => setRegion((event.target as HTMLInputElement).value)}>\n        {regionSelectOptions}\n      </Select>\n    );\n  }\n\n\n  // Builds subspecialty select box component\n  const programmeSubSpecialties = [...new Set(programmes.map((programme: Programme) => programme.subSpecialty))] as string[];\n\n  let subSpecialtySelectBox = [];\n  let subSpecialtySelectOptions = [];\n  if (programmeSubSpecialties && programmeSubSpecialties.length > 1) {\n    programmeSubSpecialties.unshift('All');\n\n    for (const [index, subSpecialtyName] of programmeSubSpecialties.entries()) {\n      subSpecialtySelectOptions.push(\n        <Select.Option key={index} value={subSpecialtyName}>\n          {subSpecialtyName}\n        </Select.Option>\n      );\n    }\n\n    subSpecialtySelectBox.push(\n      <Select\n        key=\"subSpecialty\"\n        id=\"sub-specialty\"\n        label=\"Filter by Programme type\"\n        onChange={event => setSubSpecialty((event.target as HTMLInputElement).value)}>\n        {subSpecialtySelectOptions}\n      </Select>\n    );\n  }\n\n  let filteredProgrammes = programmes;\n  if (region !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.regionName === region);\n  }\n\n  if (subSpecialty !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.subSpecialty === subSpecialty);\n  }\n\n  let programmeTableRows = [];\n  for (const [index, {\n    subSpecialty: subSpecialtyName,\n    programmePageUrl,\n    regionName,\n    regionPageUrl,\n    durationInYears,\n    contractType,\n    numberOfVacancies,\n    reopeningCalendar\n  }] of filteredProgrammes.entries()) {\n\n    let status = 'Open';\n    if (!numberOfVacancies) {\n      status = 'Closed';\n    }\n\n    if (!numberOfVacancies && reopeningCalendar) {\n      status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n    }\n\n    programmeTableRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>\n          <a href={programmePageUrl}>{subSpecialtyName} at {regionName}</a>\n        </Table.Cell>\n        <Table.Cell>\n          <a href={regionPageUrl}>{regionName}</a>\n        </Table.Cell>\n        <Table.Cell>{durationInYears} Years, {contractType}</Table.Cell>\n        <Table.Cell>\n          {numberOfVacancies === 0\n            ? <ErrorMessage visuallyHiddenText={status}>\n                {status}\n              </ErrorMessage>\n            : <span style={{color: 'green', fontWeight: 600}}>\n                {status}\n              </span>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col width=\"full\">\n            <Panel>\n              <h2>{ programmeListingTitle }</h2>\n              <Panel.Group>\n                <Panel>\n                  {regionSelectBox}\n                  {subSpecialtySelectBox}\n                </Panel>\n              </Panel.Group>\n              {/* <Details.ExpanderGroup>\n                <Details expander>\n                  <Details.Summary>List view</Details.Summary>\n                  <Details.Text> */}\n                  <Table.Panel>\n                    <Table>\n                      <Table.Head>\n                        <Table.Row>\n                          <Table.Cell>Training programme</Table.Cell>\n                          <Table.Cell>Local team</Table.Cell>\n                          <Table.Cell>Duration</Table.Cell>\n                          <Table.Cell>Status</Table.Cell>\n                        </Table.Row>\n                      </Table.Head>\n                      <Table.Body>{programmeTableRows}</Table.Body>\n                    </Table>\n                  </Table.Panel>\n                  {/* </Details.Text>\n                </Details>\n                <Details expander>\n                  <Details.Summary>Map view</Details.Summary>\n                  <Details.Text>\n                    Yet to be implemented\n                  </Details.Text>\n                </Details>\n              </Details.ExpanderGroup> */}\n            </Panel>\n          </Col>\n        </Row>\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {\n  Col,\n  Container,\n  ErrorMessage,\n  Panel,\n  Row,\n  Select,\n  Table\n} from \"nhsuk-react-components\";\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\ninterface Programme {\n  self: string,\n  contractType: string,\n  durationInYears: number,\n  numberOfVacancies: number,\n  regionName: string,\n  regionPageUrl: string,\n  reopeningCalendar: number,\n  specialty: string\n  subSpecialtyName: string\n}\n\nexport function ProgrammeListingByAPI(props: BrProps) {\n  const { programmeListingTitle, currentPageType, programmes } = props.component.getModels();\n\n  const [region, setRegion] = React.useState<string>('All');\n  const [subSpecialty, setSubSpecialty] = React.useState<string>('All');\n\n  if (!programmes) {\n    return null;\n  }\n\n  // Builds region select box component\n  const programmeRegions = [...new Set(programmes.map((programme: Programme) => programme.regionName))] as string[];\n\n  let regionSelectBox = [];\n  let regionSelectOptions = [];\n  if (programmeRegions && programmeRegions.length > 1) {\n    programmeRegions.unshift('All');\n\n    for (const [index, regionName] of programmeRegions.entries()) {\n      regionSelectOptions.push(\n        <Select.Option key={index} value={regionName}>\n          {regionName}\n        </Select.Option>\n      );\n    }\n\n    regionSelectBox.push(\n      <Select\n        key=\"region\"\n        id=\"region\"\n        label=\"Filter by Local Team\"\n        onChange={event => setRegion((event.target as HTMLInputElement).value)}>\n        {regionSelectOptions}\n      </Select>\n    );\n  }\n\n\n  // Builds subspecialty select box component\n  const programmeSubSpecialties = [...new Set(programmes.map((programme: Programme) => programme.subSpecialtyName))] as string[];\n\n  let subSpecialtySelectBox = [];\n  let subSpecialtySelectOptions = [];\n  if (programmeSubSpecialties && programmeSubSpecialties.length > 1) {\n    programmeSubSpecialties.unshift('All');\n\n    for (const [index, subSpecialtyName] of programmeSubSpecialties.entries()) {\n      subSpecialtySelectOptions.push(\n        <Select.Option key={index} value={subSpecialtyName}>\n          {subSpecialtyName}\n        </Select.Option>\n      );\n    }\n\n    subSpecialtySelectBox.push(\n      <Select\n        key=\"subSpecialty\"\n        id=\"sub-specialty\"\n        label=\"Filter by Programme type\"\n        onChange={event => setSubSpecialty((event.target as HTMLInputElement).value)}>\n        {subSpecialtySelectOptions}\n      </Select>\n    );\n  }\n\n  let filteredProgrammes = programmes;\n  if (region !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.regionName === region);\n  }\n\n  if (subSpecialty !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.subSpecialtyName === subSpecialty);\n  }\n\n  let programmeTableRows = [];\n  for (const [index, {\n    specialty,\n    subSpecialtyName,\n    self: programmePageUrl,\n    regionName,\n    regionPageUrl,\n    durationInYears,\n    contractType,\n    numberOfVacancies,\n    reopeningCalendar\n  }] of filteredProgrammes.entries()) {\n\n    let status = 'Open';\n    if (!numberOfVacancies) {\n      status = 'Closed';\n    }\n\n    if (!numberOfVacancies && reopeningCalendar) {\n      status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n    }\n\n    let programmePageUrlPathPrefix = '';\n    if ('specialty' === currentPageType) {\n      programmePageUrlPathPrefix = specialty + '/' + subSpecialtyName;\n    } else if ('subspecialty' === currentPageType) {\n      programmePageUrlPathPrefix = subSpecialtyName\n    }\n\n    programmePageUrlPathPrefix = programmePageUrlPathPrefix.toLowerCase().replace(' ', '-') + '/programme';\n\n    programmeTableRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>\n          <a href={programmePageUrlPathPrefix + programmePageUrl}>{subSpecialtyName} at {regionName}</a>\n        </Table.Cell>\n        <Table.Cell>\n          <a href={regionPageUrl}>{regionName}</a>\n        </Table.Cell>\n        <Table.Cell>{durationInYears} Years, {contractType}</Table.Cell>\n        <Table.Cell>\n          {numberOfVacancies === 0\n            ? <ErrorMessage visuallyHiddenText={status}>\n                {status}\n              </ErrorMessage>\n            : <span style={{color: 'green', fontWeight: 600}}>\n                {status}\n              </span>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col width=\"full\">\n            <Panel>\n              <h2>{ programmeListingTitle }</h2>\n              <Panel.Group>\n                <Panel>\n                  {regionSelectBox}\n                  {subSpecialtySelectBox}\n                </Panel>\n              </Panel.Group>\n              {/* <Details.ExpanderGroup>\n                <Details expander>\n                  <Details.Summary>List view</Details.Summary>\n                  <Details.Text> */}\n                  <Table.Panel>\n                    <Table>\n                      <Table.Head>\n                        <Table.Row>\n                          <Table.Cell>Training programme</Table.Cell>\n                          <Table.Cell>Local team</Table.Cell>\n                          <Table.Cell>Duration</Table.Cell>\n                          <Table.Cell>Status</Table.Cell>\n                        </Table.Row>\n                      </Table.Head>\n                      <Table.Body>{programmeTableRows}</Table.Body>\n                    </Table>\n                  </Table.Panel>\n                  {/* </Details.Text>\n                </Details>\n                <Details expander>\n                  <Details.Summary>Map view</Details.Summary>\n                  <Details.Text>\n                    Yet to be implemented\n                  </Details.Text>\n                </Details>\n              </Details.ExpanderGroup> */}\n            </Panel>\n          </Col>\n        </Row>\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import {BrProps, BrPageContext} from \"@bloomreach/react-sdk\";\nimport React from \"react\";\nimport {\n  ActionLink,\n  Button,\n  CareCard as NHSUKCareCard,\n  Col,\n  Container,\n  ErrorMessage,\n  Fieldset,\n  Images,\n  Panel,\n  Promo,\n  Row,\n  SummaryList\n} from \"nhsuk-react-components\";\n\ninterface CardData {\n  title: string;\n  imageUrl: string | undefined;\n  summary: string;\n  linkLabel: string;\n  linkUrl: string | undefined;\n}\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\nfunction getProgrammeStatus(numberOfVacancies: number, reopeningCalendar: number | undefined) {\n  let programmeStatus = 'Open';\n  if (!numberOfVacancies) {\n    programmeStatus = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    programmeStatus = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  return programmeStatus;\n}\n\nfunction getPartTimeContactTypeLabel(partTimeContactType: string | undefined) {\n  if (!partTimeContactType) {\n    return '';\n }\n\n  let partTimeContactTypeLabel = '';\n  switch (partTimeContactType) {\n    case 'ltft':\n      partTimeContactTypeLabel = 'LTFT Applications considered';\n      break;\n    default:\n      break;\n }\n\n  return partTimeContactTypeLabel;\n}\n\nfunction getQualificationTypeLabel(qualificationType: string | undefined) {\n  if (!qualificationType) {\n    return '';\n }\n\n  let qualificationTypeLabel = '';\n  switch (qualificationType) {\n    case 'cct':\n      qualificationTypeLabel = 'Certificate of Completion of Training';\n      break;\n    default:\n      break;\n }\n\n  return qualificationTypeLabel;\n}\n\nfunction getEducationTypeLabel(educationType: string | undefined) {\n  if (!educationType) {\n    return '';\n }\n\n  let educationTypeLabel = '';\n  switch (educationType) {\n    case 'higher':\n      educationTypeLabel = 'Higher';\n      break;\n    default:\n      break;\n }\n\n  return educationTypeLabel;\n}\n\nfunction ProgrammeDetails({trainingType, document} : any) {\n  const {model: {\n    competitionRatio,\n    contractType,\n    durationInYears,\n    educationType,\n    entryRequirementsLinkUrl,\n    gmcNTSScore,\n    numberOfVacancies,\n    partTimeContractType,\n    qualification,\n    reopeningCalendar,\n    totalPosts\n }} = document;\n\n  // Builds programme status\n  let status = 'Open';\n  if (!numberOfVacancies) {\n    status = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  const programmeStatus = getProgrammeStatus(numberOfVacancies, reopeningCalendar);\n\n  return (\n    <Panel.Group>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Status</SummaryList.Key>\n            <SummaryList.Value>\n              {numberOfVacancies === 0\n                ? <ErrorMessage visuallyHiddenText={status}>\n                    {programmeStatus}\n                  </ErrorMessage>\n                : <span style={{color: 'green', fontWeight: 600}}>\n                    {programmeStatus}\n                  </span>\n             }\n            </SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Number of vacancies</SummaryList.Key>\n            <SummaryList.Value>{numberOfVacancies}/{totalPosts}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Competition ratio</SummaryList.Key>\n            <SummaryList.Value>{competitionRatio}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>GMC NTS Score</SummaryList.Key>\n            <SummaryList.Value>{gmcNTSScore}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Entry requirements</SummaryList.Key>\n            <SummaryList.Value>\n              <a href={entryRequirementsLinkUrl}> View person specification</a>\n            </SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Learning stage</SummaryList.Key>\n            <SummaryList.Value>{trainingType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Programme type</SummaryList.Key>\n            <SummaryList.Value>{getEducationTypeLabel(educationType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Duration</SummaryList.Key>\n            <SummaryList.Value>{durationInYears} Years, {contractType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Part time offered</SummaryList.Key>\n            <SummaryList.Value>{getPartTimeContactTypeLabel(partTimeContractType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Qualification</SummaryList.Key>\n            <SummaryList.Value>{getQualificationTypeLabel(qualification)}</SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n    </Panel.Group>\n  )\n}\n\nfunction KeyStaffs({keyStaffs}: any) {\n  const page = React.useContext(BrPageContext);\n\n  if (!keyStaffs || !page) {\n    return null;\n  }\n\n  let keyStaffPanelGroups = [];\n  let keyStaffPanels = [];\n  for (const [index, keyStaffRef] of keyStaffs.entries()) {\n    const keyStaffDoc = page.getContent(keyStaffRef);\n\n    if (!keyStaffDoc) {\n      continue;\n    }\n\n    const {name, title, department, image: imageRef} = keyStaffDoc.getData<DocumentData>();\n\n    const image = imageRef && page.getContent(imageRef);\n\n    keyStaffPanels.push(\n      <Panel key={index}>\n        {image &&\n          <Images\n            src={image.getUrl()}\n            alt={name}\n            srcSet={image.getUrl() + ' 640w'} />\n        }\n        <h3>{name}</h3>\n        <p>{department}</p>\n        <p>{title}</p>\n      </Panel>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === keyStaffs.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          keyStaffPanels.push(\n            <Panel key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Panel>\n          );\n        }\n      }\n\n      keyStaffPanelGroups.push(\n        <Panel.Group key={(index + 1) / 3}>\n          {keyStaffPanels}\n        </Panel.Group>\n      );\n\n      keyStaffPanels = [];\n    }\n  }\n\n  return(\n    <>\n      <h2>Key Staff</h2>\n      {keyStaffPanelGroups}\n    </>\n  );\n}\n\nfunction PanelCard(cardData: CardData) {\n  return (\n    <Panel.Group>\n      <Panel>\n        <h3>{cardData.title}</h3>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        {cardData.linkLabel && cardData.linkUrl && (\n          <ActionLink href={cardData.linkUrl}>\n            {cardData.linkLabel}\n          </ActionLink>\n        )}\n      </Panel>\n    </Panel.Group>\n  );\n}\n\nfunction PromoCard(cardData: CardData) {\n  return (\n    <Promo.Group>\n      <Promo\n        href={cardData.linkUrl || undefined}\n        imageSrc={cardData.imageUrl || undefined}\n      >\n        <Promo.Heading>{cardData.title}</Promo.Heading>\n        <Promo.Description>\n          <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        </Promo.Description>\n      </Promo>\n    </Promo.Group>\n  );\n}\n\nfunction CareCard(cardData: CardData) {\n  return (\n    <NHSUKCareCard type=\"urgent\">\n      <NHSUKCareCard.Heading>{cardData.title}</NHSUKCareCard.Heading>\n      <NHSUKCareCard.Content>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n      </NHSUKCareCard.Content>\n    </NHSUKCareCard>\n  );\n}\n\nfunction Section({sectionIndex, trainingType, document} : any) {\n  const page = React.useContext(BrPageContext);\n  const {model: {programmeSections}} = document;\n  const section = programmeSections[sectionIndex];\n  let card;\n\n  if (section.cardType) {\n\n    // Builds CardData\n    let cardData = {} as CardData;\n    const cardDoc = section.cardDocument && page?.getContent(section.cardDocument);\n\n    if (cardDoc) {\n      const {title, image: imageRef, abstract, _links} = cardDoc.getData<DocumentData>();\n\n      cardData.title = cardData.linkLabel = title;\n\n      const cardImage = imageRef && page?.getContent(imageRef);\n      cardData.imageUrl = cardImage?.getUrl();\n      cardData.summary = '<p>' + abstract + '</p>';\n      cardData.linkLabel = title;\n\n      cardData.linkUrl = cardDoc.getUrl();\n      if (_links?.site.type === 'internal') {\n        cardData.linkUrl = _links?.site!.href;\n     }\n   }\n\n    cardData.title = section.cardTitle || cardData.title;\n    const cardImage = section.cardImage && page?.getContent(section.cardImage);\n    cardData.imageUrl = cardImage?.getUrl();\n    cardData.summary = section.cardSummary || cardData.summary;\n    cardData.linkLabel = section.cardLinkLabel || cardData.linkLabel;\n    cardData.linkUrl = section.cardLinkUrl || cardData.linkUrl;\n\n    switch (section.cardType) {\n      case \"promo\":\n        card = <PromoCard  {...cardData} />;\n        break;\n      case \"care\":\n        card = <CareCard {...cardData} />;\n        break;\n      case \"panel\":\n      default:\n        card = <PanelCard {...cardData} />;\n   }\n }\n\n  let mainLink;\n\n  if (section.mainLinkLabel && section.mainLinkUrl) {\n    const mainLinkType = section.mainLinkType ? section.mainLinkType : 'actionLink';\n\n    switch (mainLinkType) {\n      case \"primaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled}>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"secondaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled} secondary>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"actionLink\":\n      default:\n        mainLink =\n          <ActionLink href={section.mainLinkUrl}>\n            {section.mainLinkLabel}\n          </ActionLink>\n   }\n }\n\n  let additionalSections;\n\n  if (section.renderProgrammeDetails) {\n    additionalSections = <ProgrammeDetails trainingType={trainingType} document={document} />;\n }\n\n  if (section.renderKeyStaffSectionBelowThisSection) {\n    additionalSections = <KeyStaffs keyStaffs={document.model.keyStaffs} />;\n }\n\n  return (\n    <>\n      <Row>\n        <Col width=\"two-thirds\">\n          <div dangerouslySetInnerHTML={{__html: section.mainBody.value}} />\n          {mainLink}\n        </Col>\n        <Col width=\"one-third\">{card}</Col>\n      </Row>\n      <Row>\n        <Col width=\"full\">\n          {additionalSections}\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport function ProgrammePageContent(props: BrProps) {\n  const {subSpecialty, regionName, trainingType, document: documentRef} = props.component.getModels();\n  const document = documentRef && props.page.getContent(documentRef);\n\n  if (!document) {\n    return null;\n }\n\n  const {programmeSections} = document.getData<DocumentData>();\n\n  return (\n    <>\n      <Container>\n        <Fieldset>\n          <Fieldset.Legend>{trainingType}</Fieldset.Legend>\n        </Fieldset>\n        <Fieldset>\n          <Fieldset.Legend isPageHeading>{subSpecialty} at {regionName}</Fieldset.Legend>\n        </Fieldset>\n        {programmeSections.map((section: any, index: number) => (\n          <Section key={index} sectionIndex={index} trainingType={trainingType} document={document} />\n        ))}\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import {BrProps} from \"@bloomreach/react-sdk\";\nimport React from \"react\";\nimport {\n  ActionLink,\n  Button,\n  CareCard as NHSUKCareCard,\n  Col,\n  Container,\n  ErrorMessage,\n  Fieldset,\n  Images,\n  Panel,\n  Promo,\n  Row,\n  SummaryList\n} from \"nhsuk-react-components\";\n\ninterface CardData {\n  title: string;\n  imageUrl: string | undefined;\n  summary: string;\n  linkLabel: string;\n  linkUrl: string | undefined;\n}\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\nfunction getProgrammeStatus(numberOfVacancies: number, reopeningCalendar: number | undefined) {\n  let programmeStatus = 'Open';\n  if (!numberOfVacancies) {\n    programmeStatus = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    programmeStatus = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  return programmeStatus;\n}\n\nfunction getPartTimeContactTypeLabel(partTimeContactType: string | undefined) {\n  if (!partTimeContactType) {\n    return '';\n }\n\n  let partTimeContactTypeLabel = '';\n  switch (partTimeContactType) {\n    case 'ltft':\n      partTimeContactTypeLabel = 'LTFT Applications considered';\n      break;\n    default:\n      break;\n }\n\n  return partTimeContactTypeLabel;\n}\n\nfunction getQualificationTypeLabel(qualificationType: string | undefined) {\n  if (!qualificationType) {\n    return '';\n }\n\n  let qualificationTypeLabel = '';\n  switch (qualificationType) {\n    case 'cct':\n      qualificationTypeLabel = 'Certificate of Completion of Training';\n      break;\n    default:\n      break;\n }\n\n  return qualificationTypeLabel;\n}\n\nfunction getEducationTypeLabel(educationType: string | undefined) {\n  if (!educationType) {\n    return '';\n }\n\n  let educationTypeLabel = '';\n  switch (educationType) {\n    case 'higher':\n      educationTypeLabel = 'Higher';\n      break;\n    default:\n      break;\n }\n\n  return educationTypeLabel;\n}\n\nfunction ProgrammeDetails({programme} : any) {\n  const {\n    trainingType,\n    competitionRatio,\n    contractType,\n    durationInYears,\n    educationType,\n    entryRequirementsLinkUrl,\n    gmcNTSScore,\n    numberOfVacancies,\n    partTimeContractType,\n    qualification,\n    reopeningCalendar,\n    totalPosts\n  } = programme;\n\n  // Builds programme status\n  let status = 'Open';\n  if (!numberOfVacancies) {\n    status = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  const programmeStatus = getProgrammeStatus(numberOfVacancies, reopeningCalendar);\n\n  return (\n    <Panel.Group>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Status</SummaryList.Key>\n            <SummaryList.Value>\n              {numberOfVacancies === 0\n                ? <ErrorMessage visuallyHiddenText={status}>\n                    {programmeStatus}\n                  </ErrorMessage>\n                : <span style={{color: 'green', fontWeight: 600}}>\n                    {programmeStatus}\n                  </span>\n             }\n            </SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Number of vacancies</SummaryList.Key>\n            <SummaryList.Value>{numberOfVacancies}/{totalPosts}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Competition ratio</SummaryList.Key>\n            <SummaryList.Value>{competitionRatio}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>GMC NTS Score</SummaryList.Key>\n            <SummaryList.Value>{gmcNTSScore}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Entry requirements</SummaryList.Key>\n            <SummaryList.Value>\n              <a href={entryRequirementsLinkUrl}> View person specification</a>\n            </SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Learning stage</SummaryList.Key>\n            <SummaryList.Value>{trainingType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Programme type</SummaryList.Key>\n            <SummaryList.Value>{getEducationTypeLabel(educationType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Duration</SummaryList.Key>\n            <SummaryList.Value>{durationInYears} Years, {contractType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Part time offered</SummaryList.Key>\n            <SummaryList.Value>{getPartTimeContactTypeLabel(partTimeContractType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Qualification</SummaryList.Key>\n            <SummaryList.Value>{getQualificationTypeLabel(qualification)}</SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n    </Panel.Group>\n  )\n}\n\nfunction KeyStaffs({keyStaffs}: any) {\n  let keyStaffPanelGroups = [];\n  let keyStaffPanels = [];\n  for (const [index, keyStaff] of keyStaffs.entries()) {\n\n    if (!keyStaff) {\n      continue;\n    }\n\n    const {name, title, department, imageUrl} = keyStaff;\n\n    keyStaffPanels.push(\n      <Panel key={index}>\n        {imageUrl &&\n          <Images\n            src={imageUrl}\n            alt={name}\n            srcSet={imageUrl + ' 640w'} />\n        }\n        <h3>{name}</h3>\n        <p>{department}</p>\n        <p>{title}</p>\n      </Panel>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === keyStaffs.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          keyStaffPanels.push(\n            <Panel key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Panel>\n          );\n        }\n      }\n\n      keyStaffPanelGroups.push(\n        <Panel.Group key={(index + 1) / 3}>\n          {keyStaffPanels}\n        </Panel.Group>\n      );\n\n      keyStaffPanels = [];\n    }\n  }\n\n  return(\n    <>\n      <h2>Key Staff</h2>\n      {keyStaffPanelGroups}\n    </>\n  );\n}\n\nfunction PanelCard(cardData: CardData) {\n  return (\n    <Panel.Group>\n      <Panel>\n        <h3>{cardData.title}</h3>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        {cardData.linkLabel && cardData.linkUrl && (\n          <ActionLink href={cardData.linkUrl}>\n            {cardData.linkLabel}\n          </ActionLink>\n        )}\n      </Panel>\n    </Panel.Group>\n  );\n}\n\nfunction PromoCard(cardData: CardData) {\n  return (\n    <Promo.Group>\n      <Promo\n        href={cardData.linkUrl || undefined}\n        imageSrc={cardData.imageUrl || undefined}\n      >\n        <Promo.Heading>{cardData.title}</Promo.Heading>\n        <Promo.Description>\n          <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        </Promo.Description>\n      </Promo>\n    </Promo.Group>\n  );\n}\n\nfunction CareCard(cardData: CardData) {\n  return (\n    <NHSUKCareCard type=\"urgent\">\n      <NHSUKCareCard.Heading>{cardData.title}</NHSUKCareCard.Heading>\n      <NHSUKCareCard.Content>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n      </NHSUKCareCard.Content>\n    </NHSUKCareCard>\n  );\n}\n\nfunction Section({sectionIndex, programme} : any) {\n  const {programmeSections} = programme;\n  const section = programmeSections[sectionIndex];\n  let card;\n\n  if (section.cardType) {\n\n    // Builds CardData\n    let cardData = {} as CardData;\n    cardData.title = section.cardTitle;\n    cardData.imageUrl = section.cardImageUrl;\n    cardData.summary = section.cardSummary;\n    cardData.linkLabel = section.cardLinkLabel;\n    cardData.linkUrl = section.cardLinkUrl;\n\n    switch (section.cardType) {\n      case \"promo\":\n        card = <PromoCard  {...cardData} />;\n        break;\n      case \"care\":\n        card = <CareCard {...cardData} />;\n        break;\n      case \"panel\":\n      default:\n        card = <PanelCard {...cardData} />;\n    }\n }\n\n  let mainLink;\n\n  if (section.mainLinkLabel && section.mainLinkUrl) {\n    const mainLinkType = section.mainLinkType ? section.mainLinkType : 'actionLink';\n\n    switch (mainLinkType) {\n      case \"primaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled}>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"secondaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled} secondary>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"actionLink\":\n      default:\n        mainLink =\n          <ActionLink href={section.mainLinkUrl}>\n            {section.mainLinkLabel}\n          </ActionLink>\n   }\n }\n\n  let additionalSections;\n\n  if (section.renderProgrammeDetails) {\n    additionalSections = <ProgrammeDetails programme={programme} />;\n }\n\n  if (section.renderKeyStaffSectionBelowThisSection) {\n    additionalSections = <KeyStaffs keyStaffs={programme.keyStaffs} />;\n }\n\n  return (\n    <>\n      <Row>\n        <Col width=\"two-thirds\">\n          <div dangerouslySetInnerHTML={{__html: section.mainBody}} />\n          {mainLink}\n        </Col>\n        <Col width=\"one-third\">{card}</Col>\n      </Row>\n      <Row>\n        <Col width=\"full\">\n          {additionalSections}\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport function ProgrammePageContentByAPI(props: BrProps) {\n  const {programme} = props.component.getModels();\n\n  if (!programme) {\n    return null;\n  }\n\n  const {subSpecialtyName, trainingType, regionName, programmeSections} = programme;\n\n  return (\n    <>\n      <Container>\n        <Fieldset>\n          <Fieldset.Legend>{trainingType}</Fieldset.Legend>\n        </Fieldset>\n        <Fieldset>\n          <Fieldset.Legend isPageHeading>{subSpecialtyName} at {regionName}</Fieldset.Legend>\n        </Fieldset>\n        {programmeSections.map((section: any, index: number) => (\n          <Section key={index} sectionIndex={index} programme={programme} />\n        ))}\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import {connectPagination} from 'react-instantsearch-dom';\nimport React, {Component} from 'react';\nimport {Pagination} from \"nhsuk-react-components\";\n\ninterface PaginationProps {\n    currentRefinement: number,\n    nbPages: number,\n    refine: any,\n    createURL: any\n}\n\nclass SearchPagination extends Component<PaginationProps> {\n\n    onChange = (event: any, page: number) => {\n        event.preventDefault();\n        return this.props.refine(page);\n    };\n\n    render() {\n        let {currentRefinement, nbPages, createURL} = this.props;\n\n        let prevButton;\n        if (currentRefinement > 1) {\n            const prevPage = currentRefinement - 1;\n\n            prevButton =\n                <Pagination.Link previous href={createURL(prevPage)}\n                                 onClick={(event) => this.onChange(event, prevPage)}>\n                    Page {prevPage} of {nbPages}\n                </Pagination.Link>;\n        }\n\n        let nextButton;\n        if (currentRefinement < nbPages) {\n            const nextPage = currentRefinement + 1;\n\n            nextButton =\n                <Pagination.Link next href={createURL(nextPage)} onClick={(event) => this.onChange(event, nextPage)}>\n                    Page {nextPage} of {nbPages}\n                </Pagination.Link>;\n        }\n        return (\n            <div style={{minWidth: 400}}>\n                <Pagination>\n                    {prevButton}\n                    {nextButton}\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nexport default connectPagination(SearchPagination);\n","import algoliasearch from 'algoliasearch/lite';\nimport {\n    InstantSearch,\n    Configure,\n    SearchBox,\n    connectRefinementList,\n    connectHits,\n    Snippet,\n    connectStats,\n    connectSortBy,\n    Highlight,\n} from 'react-instantsearch-dom';\nimport * as React from 'react';\nimport './Search.css';\nimport {CloseIcon, SearchIcon} from \"nhsuk-react-components\";\nimport {Hit, HitsProvided, RefinementListProvided} from \"react-instantsearch-core\";\nimport Checkboxes from \"nhsuk-react-components/lib/components/checkboxes\";\nimport Pagination from \"./SearchPagination\";\nimport Select from \"nhsuk-react-components/lib/components/select\";\nimport {BrProps} from \"@bloomreach/react-sdk\";\n\nexport function Search(props: BrProps) {\n\n    const indexName = props.component.getParameters()['indexName'] || '';\n    const appId = props.component.getParameters()['appId'] || '';\n    const apiKey = props.component.getParameters()['apiKey'] || '';\n\n    if (!indexName || !apiKey || !appId) {\n        console.log(\"Search component is not configured correctly!\");\n        return null;\n    }\n\n    const searchClient = algoliasearch(appId, apiKey);\n\n    return (\n        <div className=\"nhsuk-width-container\">\n            <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/reset-min.css'\n                  integrity='sha256-t2ATOGCtAIZNnzER679jwcFcKYfLlw01gli6F6oszk8=' crossOrigin='anonymous'/>\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/algolia-min.css\"\n                  integrity=\"sha256-HB49n/BZjuqiCtQQf49OdZn63XuKFaxcIHWf0HNKte8=\" crossOrigin=\"anonymous\"/>\n\n            <InstantSearch searchClient={searchClient} indexName={indexName}>\n                <div className=\"left-panel\">\n                    <div className=\"custom-refinement-section\">\n                        <div className=\"custom-refinement-list\">\n                            <h5>Category</h5>\n                            <CustomRefinementList attribute=\"category\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Region</h5>\n                            <CustomRefinementList attribute=\"region\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Speciality</h5>\n                            <CustomRefinementList attribute=\"speciality\"/>\n                        </div>\n                    </div>\n                    <Configure hitsPerPage={5}/>\n                </div>\n                <div className=\"right-panel\">\n                    <div className=\"custom-search\">\n                        <SearchBox submit={<SearchIcon/>} reset={<CloseIcon/>}/>\n                    </div>\n                    <CustomSortBy\n                        defaultRefinement=\"articles\"\n                        items={[\n                            {value: 'articles', label: 'Relevance'},\n                            {value: 'articles_date_desc', label: 'Most recently modified'}\n                        ]}\n                    />\n                    <CustomStats/>\n                    <CustomHits/>\n                    <Pagination/>\n                </div>\n            </InstantSearch>\n        </div>\n    );\n}\n\nconst Hits = ({hits}: HitsProvided<Hit>) => (\n    <div>\n        <ul className=\"nhsuk-list nhsuk-list--border\">\n            {hits.map(hit => (\n                <div key={hit.objectID}>\n                    <li>\n                        <h2 className=\"nhsuk-u-margin-bottom-1\" style={{\"fontWeight\": 400, \"fontSize\": \"19px\"}}>\n                            <a\n                                className=\"app-search-results-item\" href={`/site/${hit.path}`}>\n                                <Highlight attribute=\"title\" hit={hit}/>\n                            </a>\n                        </h2>\n                        <p className=\"nhsuk-body-s nhsuk-u-margin-top-1\">\n                            <Highlight attribute=\"introduction\" hit={hit}/>\n                            <Snippet hit={hit} attribute=\"summary\"/>;\n                            <strong>\n                                <Highlight attribute=\"category\" hit={hit}/>\n                            </strong>\n                        </p>\n                    </li>\n                </div>\n            ))}\n        </ul>\n    </div>\n);\n\nconst CustomHits = connectHits(Hits);\n\nconst RefinementList = ({items, refine}: RefinementListProvided) => (\n    <Checkboxes>\n        {items.map(item => (\n            <Checkboxes.Box\n                key={item.label}\n                onClick={() => {\n                    return refine(item.value);\n                }}\n            >\n                {item.label} ({item.count})\n            </Checkboxes.Box>\n        ))}\n    </Checkboxes>\n);\n\nconst CustomRefinementList = connectRefinementList(RefinementList);\n\ninterface StatsProvided {\n    nbHits: number;\n    processingTimeMS: number;\n}\n\nconst Stats = ({nbHits}: StatsProvided) => (\n    <p className=\"nhsuk-body-s nhsuk-u-margin-bottom-3\" style={{paddingLeft: \"65%\", paddingBottom: '20px'}}>\n        Found <b>{nbHits}</b> matching results.\n    </p>\n);\nconst CustomStats = connectStats(Stats);\n\n\nconst SortBy = ({items, refine, createURL}: any) => (\n    <Select\n        label=\"Sort by\"\n        onChange={(event: any) => {\n            event.preventDefault();\n            refine(event.target.value)\n        }}\n        style={{fontSize: \"16px\"}}\n    >\n        {items.map((item: { value: string, label: string, isRefined: boolean }) => (\n            <Select.Option\n                key={item.value}\n                value={item.value}\n                href={createURL(item.value)}>\n                {item.label}\n            </Select.Option>\n        ))}\n    </Select>\n);\n\nconst CustomSortBy = connectSortBy(SortBy);","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {ContentsList} from \"nhsuk-react-components\";\n\nexport function TrainingByLocalTeams(props: BrProps) {\n  const {trainingByLocalTeamsTitle, trainingByLocalTeamsLinks}: {trainingByLocalTeamsTitle: string, trainingByLocalTeamsLinks: Link[]} = props.component.getModels();\n\n  if (!trainingByLocalTeamsLinks) {\n    return null;\n }\n\n  return (\n    <>\n      <h2>{trainingByLocalTeamsTitle}</h2>\n        <ContentsList>\n          {trainingByLocalTeamsLinks.map((link, index) => {\n            return (\n              <ContentsList.Item key={index} href={link.url}>\n                <h3>{link.label}</h3>\n              </ContentsList.Item>\n            )\n         })}\n        </ContentsList>\n        <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage } from '@bloomreach/react-sdk';\nimport {\n  Article,\n  AzureADProfile,\n  Breadcrumb,\n  EducationHubDocPromoCards,\n  Footer,\n  HeroBanner,\n  Menu,\n  PageContent,\n  ProgrammeListing,\n  ProgrammeListingByAPI,\n  ProgrammePageContent,\n  ProgrammePageContentByAPI,\n  SharepointFiles,\n  Search,\n  TrainingByLocalTeams,\n} from \"./components\";\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  var channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n\n  var liveCMSBaseUrl = process.env.REACT_APP_LIVE_BR_BASE_URL!;\n  var previewCMSBaseUrl = process.env.REACT_APP_PREVIEW_BR_BASE_URL!;\n  var siteContextRemovedPath = props.location.pathname;\n\n  channels.forEach((channel) => {\n    if (props.location.pathname.startsWith('/site/' + channel)) {\n      // Appending channel to live cmsBaseUrl\n      liveCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/' + channel, '');\n    }\n\n    if (props.location.pathname.startsWith('/site/_cmsinternal/' + channel)) {\n      // Appending channel to preview cmsBaseUrl\n      previewCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/_cmsinternal/' + channel, '/site/_cmsinternal');\n    }\n  });\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  if (siteContextRemovedPath.startsWith('/site') && !siteContextRemovedPath.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: liveCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: previewCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      // appending `_maxreflevel=<max_content_item_ref_depth_level>` parameter\n      // in order to get additional depth level content item references.\n      path: `${siteContextRemovedPath}${props.location.search}${props.location.search ? '&' : '?'}_maxreflevel=2`,\n    },\n  };\n\n  const mapping = {\n    Article,\n    \"AzureAD Profile\": AzureADProfile,\n    Breadcrumb,\n    EducationHubListing: EducationHubDocPromoCards,\n    \"Hero Banner\": HeroBanner,\n    \"Sharepoint Files\": SharepointFiles,\n    PageContent,\n    ProgrammeListing,\n    ProgrammeListingByAPI,\n    ProgrammePageContent,\n    ProgrammePageContentByAPI,\n    Search,\n    SubHubListing: EducationHubDocPromoCards,\n    TrainingByLearningStage: EducationHubDocPromoCards,\n    TrainingByLocalTeams,\n  };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <BrComponent path=\"breadcrumb\" />\n\n      <BrComponent path=\"hero\" />\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          {/* <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n              ) }\n            </BrPageContext.Consumer> */}\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}