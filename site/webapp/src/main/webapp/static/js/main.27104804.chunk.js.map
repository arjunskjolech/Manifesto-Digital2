{"version":3,"sources":["components/Article.tsx","components/AzureADProfile.tsx","components/Breadcrumb.tsx","components/EducationHubListing.tsx","components/Footer.tsx","components/HeroBanner.tsx","components/Menu.tsx","components/PageContent.tsx","components/ProgrammeListing.tsx","components/ProgrammePageContent.tsx","components/SearchPagination.tsx","components/Search.tsx","components/SharepointFiles.tsx","components/SubHubListing.tsx","components/TrainingByLearningStage.tsx","components/TrainingByLocalTeams.tsx","App.tsx","index.tsx"],"names":["Article","props","articleDocumentRef","component","getModels","document","articleDocument","page","getContent","React","useContext","BrPageContext","getData","title","summary","relatedNews","relatedLinks","relatedNewsRef","relatedArticleDocument","_links","relatedArticleUrl","getUrl","site","type","href","push","Item","key","dangerouslySetInnerHTML","__html","value","length","AzureADProfile","user","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","map","group","index","isPreview","label","Breadcrumb","breadCrumbLinks","link","url","EducationHubListing","educationHubTitle","educationHubDocs","educationHubCards","educationHubGroupCards","entries","educationHubDocRef","educationHubHomeDoc","abstract","imageRef","image","cardUrl","imageSrc","Heading","Description","j","style","visibility","Group","Footer","List","columns","ListItem","Copyright","HeroBanner","heroBannerDocumentRef","heroBannerDocument","heading","summaryText","Text","MenuLink","item","NavItem","name","disabled","Logout","action","method","secondary","Menu","BrComponentContext","currentUrl","toJSON","renderLogoutButton","endsWith","channels","process","split","logoUrl","forEach","channel","indexOf","menu","headerTheme","orgName","orgSplit","orgDescriptor","white","whiteHeaderBg","Container","Logo","Content","MenuToggle","Search","Nav","className","siteMenuItems","PanelCard","cardData","linkLabel","linkUrl","PromoCard","undefined","imageUrl","CareCard","Section","card","mainLink","section","cardType","cardDoc","cardDocument","cardImage","cardTitle","cardSummary","cardLinkLabel","cardLinkUrl","mainLinkLabel","mainLinkUrl","mainLinkType","mainLinkDisabled","width","mainBody","PageContent","documentRef","sections","ProgrammeListing","programmeListingTitle","programmes","useState","region","setRegion","subSpecialty","setSubSpecialty","programmeRegions","Set","programme","regionName","regionSelectBox","regionSelectOptions","unshift","Option","id","onChange","event","target","programmeSubSpecialties","subSpecialtySelectBox","subSpecialtySelectOptions","subSpecialtyName","filteredProgrammes","filter","programmeTableRows","programmePageUrl","regionPageUrl","durationInYears","contractType","numberOfVacancies","reopeningCalendar","status","Date","toLocaleString","year","month","Cell","visuallyHiddenText","color","fontWeight","Panel","Head","Body","getFormattedDateForProgrammeStatus","time","ProgrammeDetails","trainingType","model","competitionRatio","educationType","entryRequirementsLinkUrl","gmcNTSScore","partTimeContractType","qualification","totalPosts","programmeStatus","getProgrammeStatus","educationTypeLabel","getEducationTypeLabel","partTimeContactType","partTimeContactTypeLabel","getPartTimeContactTypeLabel","qualificationType","qualificationTypeLabel","getQualificationTypeLabel","KeyStaffs","keyStaffs","keyStaffPanelGroups","keyStaffPanels","keyStaffRef","keyStaffDoc","department","src","alt","srcSet","additionalSections","sectionIndex","programmeSections","renderProgrammeDetails","renderKeyStaffSectionBelowThisSection","ProgrammePageContent","Legend","isPageHeading","SearchPagination","preventDefault","refine","prevButton","nextButton","this","currentRefinement","nbPages","createURL","prevPage","Link","previous","onClick","nextPage","next","minWidth","Component","connectPagination","indexName","getParameters","appId","apiKey","console","log","searchClient","algoliasearch","rel","integrity","crossOrigin","InstantSearch","CustomRefinementList","attribute","Configure","hitsPerPage","SearchBox","submit","reset","CustomSortBy","defaultRefinement","items","CustomStats","CustomHits","connectHits","hits","hit","objectID","path","Highlight","Snippet","connectRefinementList","Box","count","connectStats","nbHits","paddingLeft","paddingBottom","connectSortBy","fontSize","SharepointFiles","sharepointSiteFiles","Object","keys","fileType","modifiedBy","modifiedDate","toUTCString","SubHubListing","subHubListingTitle","subHubDocs","specialtyCards","specialtyGroupedCards","subHubDocRef","subHubDoc","TrainingByLearningStage","trainingByLearningStageTitle","trainingByLearningStageDocs","subHubCards","trainingByLearningDocRef","trainingByLearningDoc","TrainingByLocalTeams","trainingByLocalTeamsTitle","trainingByLocalTeamsLinks","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","liveCMSBaseUrl","previewCMSBaseUrl","siteContextRemovedPath","location","pathname","startsWith","replace","substring","configuration","httpClient","options","live","cmsBaseUrl","spaBaseUrl","preview","search","mapping","role","to","getElementById"],"mappings":"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","file":"static/js/main.27104804.chunk.js","sourcesContent":["import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Panel, ContentsList } from \"nhsuk-react-components\";\n\nexport function Article(props: BrProps) {\n  const { document: articleDocumentRef } = props.component.getModels();\n  const articleDocument = articleDocumentRef && props.page.getContent(articleDocumentRef)!;\n  const page = React.useContext(BrPageContext);\n\n  if (!articleDocument || !page) {\n    return null;\n  }\n\n  const { title, summary, relatedNews } = articleDocument.getData<DocumentData>();\n\n  // Builds Related Articles Links\n  let relatedLinks: any[] = [];\n  for (let relatedNewsRef of relatedNews) {\n    const relatedArticleDocument = relatedNewsRef && props.page.getContent(relatedNewsRef);\n\n    if (!relatedArticleDocument) {\n      continue;\n    }\n\n    const { title, _links } = relatedArticleDocument.getData<DocumentData>();\n\n    let relatedArticleUrl = relatedArticleDocument.getUrl();\n    if (_links?.site.type === 'internal') {\n      relatedArticleUrl = _links?.site!.href;\n    }\n\n    relatedLinks.push(\n      <ContentsList.Item href={relatedArticleUrl} key={relatedArticleUrl}>\n        {title}\n      </ContentsList.Item>\n    );\n  }\n\n  return (\n    <>\n      <Panel>\n        <h2>{ title }</h2>\n        <div dangerouslySetInnerHTML={{ __html: summary.value }} />\n      </Panel>\n      {relatedLinks.length > 0 &&\n        <ContentsList>\n          <h3>Related Articles</h3>\n          { relatedLinks }\n        </ContentsList>\n      }\n    </>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\ninterface UserProps {\n  displayName: string,\n  username: string,\n  jobTitle: string,\n  groups: string[]\n}\n\nexport function AzureADProfile(props: BrProps) {\n  const { user }: { user: UserProps } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group, index) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import React from 'react';\nimport {BrProps} from '@bloomreach/react-sdk';\nimport {Breadcrumb as NHSUKBreadCrumb} from \"nhsuk-react-components\";\n\ninterface Link {\n  label: string;\n  url: string;\n}\n\nexport function Breadcrumb(props: BrProps) {\n  const {breadCrumbLinks} = props.component.getModels();\n\n  if (!breadCrumbLinks) {\n    return null;\n  }\n\n  return (\n    <NHSUKBreadCrumb>\n      {breadCrumbLinks.map((link: Link, index: string | number | undefined) => {\n        return (\n          <NHSUKBreadCrumb.Item href={link.url}>{link.label}</NHSUKBreadCrumb.Item>\n        )\n      })}\n    </NHSUKBreadCrumb>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {Promo} from \"nhsuk-react-components\";\n\nexport function EducationHubListing(props: BrProps) {\n  const {educationHubTitle, educationHubDocs} = props.component.getModels();\n\n  if (!educationHubDocs) {\n    return null;\n }\n\n  // Builds SubHub page (promo) cards\n  let educationHubCards = [];\n  let educationHubGroupCards = [];\n  for (const [index, educationHubDocRef] of educationHubDocs.entries()) {\n    const educationHubHomeDoc = educationHubDocRef && props.page.getContent(educationHubDocRef);\n\n    if (!educationHubHomeDoc) {\n      continue;\n   }\n\n    const {title, abstract, image: imageRef, _links} = educationHubHomeDoc.getData<DocumentData>();\n\n    const image = imageRef && props.page.getContent(imageRef);\n\n    let cardUrl = educationHubHomeDoc.getUrl();\n    if (_links?.site.type === 'internal') {\n      cardUrl = _links?.site!.href;\n   }\n\n    educationHubCards.push(\n      <Promo\n        key={index}\n        href={cardUrl}\n        imageSrc={image?.getUrl()}\n      >\n        <Promo.Heading>{title}</Promo.Heading>\n        <Promo.Description>{abstract}</Promo.Description>\n      </Promo>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === educationHubDocs.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          educationHubCards.push(\n            <Promo key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Promo>\n          );\n       }\n     }\n\n      educationHubGroupCards.push(\n        <Promo.Group key={(index + 1) / 3}>\n          {educationHubCards}\n        </Promo.Group>\n      );\n\n      educationHubCards = [];\n   }\n }\n\n  return (\n    <>\n      {educationHubTitle &&\n        <h2>Education Hubs</h2>\n      }\n      {educationHubGroupCards}\n      <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Hero } from \"nhsuk-react-components\";\n\nexport function HeroBanner(props: BrProps) {\n  const { heroBannerDocument: heroBannerDocumentRef } = props.component.getModels();\n  const heroBannerDocument = heroBannerDocumentRef && props.page.getContent(heroBannerDocumentRef);\n\n  if (!heroBannerDocument) {\n    return null;\n  }\n\n  const { heading, image: imageRef, summaryText } = heroBannerDocument.getData<DocumentData>();\n\n  const image = imageRef && props.page.getContent(imageRef);\n\n  return (\n    <>\n    <Hero imageSrc={ image?.getUrl() }>\n      <Hero.Heading>{ heading }</Hero.Heading>\n      <Hero.Text>{ summaryText }</Hero.Text>\n    </Hero>\n    <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form, Breadcrumb } from \"nhsuk-react-components\";\n\ninterface HeaderTheme {\n  whiteHeaderBg: boolean,\n  orgName: string,\n  orgSplit: string,\n  orgDescriptor: string\n}\n\ninterface HeaderThemeModels {\n  headerTheme: HeaderTheme\n}\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  return <Header.NavItem href={item._links.site.href}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  const currentUrl = page.toJSON()!._links!.site.href;\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page` page\n  let renderLogoutButton = false;\n  if (currentUrl.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  // Builds logo url based on current page path\n  const channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n  let logoUrl = '/site';\n  channels.forEach((channel) => {\n    if (currentUrl.indexOf('/site/' + channel) !== -1 || currentUrl.indexOf('/site/_cmsinternal/' + channel) !== -1) {\n      logoUrl = '/site/' + channel;\n    }\n  });\n\n  const { menu } = component.getModels<MenuModels>();\n  const { headerTheme } = component.getModels<HeaderThemeModels>();\n\n  return (\n    <>\n    <Header orgName={ headerTheme.orgName } orgSplit={ headerTheme.orgSplit } orgDescriptor={headerTheme.orgDescriptor!} white={ headerTheme.whiteHeaderBg }>\n      <Header.Container>\n        <Header.Logo href={ logoUrl} />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search action={\"/site/search\"}/>\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} />\n        )) }\n      </Header.Nav>\n    </Header>\n\n    {/* <Breadcrumb>\n      <Breadcrumb.Item href=\"/level/one\">Home</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"/level/two\">Training</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"/level/three\">Specialty</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"/level/three\">Surgery</Breadcrumb.Item>\n      <Breadcrumb.Back href=\"/level/three\">Paediatric Surgery</Breadcrumb.Back>\n    </Breadcrumb> */}\n    </>\n  );\n}\n","import {BrProps, BrPageContext} from \"@bloomreach/react-sdk\";\nimport React from \"react\";\nimport {\n  ActionLink,\n  Container,\n  Row,\n  Col,\n  Promo,\n  Panel,\n  CareCard as NHSUKCareCard,\n  Button\n} from \"nhsuk-react-components\";\n\ninterface CardData {\n  title: string;\n  imageUrl: string | undefined;\n  summary: string;\n  linkLabel: string;\n  linkUrl: string | undefined;\n}\n\nfunction PanelCard(cardData: CardData) {\n  return (\n    <Panel.Group>\n      <Panel>\n        <h3>{cardData.title}</h3>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        {cardData.linkLabel && cardData.linkUrl && (\n          <ActionLink href={cardData.linkUrl}>\n            {cardData.linkLabel}\n          </ActionLink>\n        )}\n      </Panel>\n    </Panel.Group>\n  );\n}\n\nfunction PromoCard(cardData: CardData) {\n  return (\n    <Promo.Group>\n      <Promo\n        href={cardData.linkUrl || undefined}\n        imageSrc={cardData.imageUrl || undefined}\n      >\n        <Promo.Heading>{cardData.title}</Promo.Heading>\n        <Promo.Description>\n          <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        </Promo.Description>\n      </Promo>\n    </Promo.Group>\n  );\n}\n\nfunction CareCard(cardData: CardData) {\n  return (\n    <NHSUKCareCard type=\"urgent\">\n      <NHSUKCareCard.Heading>{cardData.title}</NHSUKCareCard.Heading>\n      <NHSUKCareCard.Content>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n      </NHSUKCareCard.Content>\n    </NHSUKCareCard>\n  );\n}\n\nfunction Section({section} : any) {\n  const page = React.useContext(BrPageContext);\n\n  if (!page) {\n    return null;\n  }\n\n  let card;\n\n  if (section.cardType) {\n\n    // Builds CardData\n    let cardData = {} as CardData;\n    const cardDoc = section.cardDocument && page.getContent(section.cardDocument);\n\n    if (cardDoc) {\n      const {title, image: imageRef, abstract, _links} = cardDoc.getData<DocumentData>();\n\n      cardData.title = cardData.linkLabel = title;\n\n      const cardImage = imageRef && page?.getContent(imageRef);\n      cardData.imageUrl = cardImage?.getUrl();\n      cardData.summary = '<p>' + abstract + '</p>';\n      cardData.linkLabel = title;\n\n      cardData.linkUrl = cardDoc.getUrl();\n      if (_links?.site.type === 'internal') {\n        cardData.linkUrl = _links?.site!.href;\n     }\n   }\n\n    cardData.title = section.cardTitle || cardData.title;\n    if (!cardData.imageUrl) {\n      const cardImage = section.cardImage && page.getContent(section.cardImage);\n      cardData.imageUrl = cardImage?.getUrl();\n    }\n    cardData.summary = section.cardSummary || cardData.summary;\n    cardData.linkLabel = section.cardLinkLabel || cardData.linkLabel;\n    cardData.linkUrl = section.cardLinkUrl || cardData.linkUrl;\n\n    switch (section.cardType) {\n      case \"promo\":\n        card = <PromoCard  {...cardData} />;\n        break;\n      case \"care\":\n        card = <CareCard {...cardData} />;\n        break;\n      case \"panel\":\n      default:\n        card = <PanelCard {...cardData} />;\n   }\n }\n\n  let mainLink;\n\n  if (section.mainLinkLabel && section.mainLinkUrl) {\n    const mainLinkType = section.mainLinkType ? section.mainLinkType : 'actionLink';\n\n    switch (mainLinkType) {\n      case \"primaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled}>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"secondaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled} secondary>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"actionLink\":\n      default:\n        mainLink =\n          <ActionLink href={section.mainLinkUrl}>\n            {section.mainLinkLabel}\n          </ActionLink>\n   }\n }\n\n  return (\n    <Row>\n      <Col width=\"two-thirds\">\n        <div dangerouslySetInnerHTML={{__html: section.mainBody.value}} />\n        {mainLink}\n      </Col>\n      <Col width=\"one-third\">{card}</Col>\n    </Row>\n  );\n}\n\nexport function PageContent(props: BrProps) {\n  const {document: documentRef} = props.component.getModels();\n  const document = documentRef && props.page.getContent(documentRef);\n\n  if (!document) {\n    return null;\n }\n\n  const {sections} = document.getData<DocumentData>();\n\n  return (\n    <>\n      <Container>\n      {sections.map((section: any, index: number) => (\n        <Section key={index} section={section} />\n      ))}\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {\n  Col,\n  Container,\n  ErrorMessage,\n  Panel,\n  Row,\n  Select,\n  Table\n} from \"nhsuk-react-components\";\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\ninterface Programme {\n  contractType: string,\n  durationInYears: number,\n  numberOfVacancies: number,\n  programmePageUrl: string,\n  regionName: string,\n  regionPageUrl: string,\n  reopeningCalendar: number,\n  subSpecialty: string\n}\n\n/* function ProgrammeTabelPanel(programmes: any[]) {\n  let programmeTableRows = [];\n  for (const [index, {\n    subSpecialty,\n    programmePageUrl,\n    regionName,\n    regionPageUrl,\n    durationInYears,\n    contractType,\n    numberOfVacancies,\n    reopeningCalendar\n  }] of programmes.entries()) {\n\n    let status = 'Open';\n    if (!numberOfVacancies) {\n      status = 'Closed';\n    }\n\n    if (!numberOfVacancies && reopeningCalendar) {\n      status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n    }\n\n    programmeTableRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>\n          <a href={programmePageUrl}>{subSpecialty} at {regionName}</a>\n        </Table.Cell>\n        <Table.Cell>\n          <a href={regionPageUrl}>{regionName}</a>\n        </Table.Cell>\n        <Table.Cell>{durationInYears} Years, {contractType}</Table.Cell>\n        <Table.Cell>\n          {numberOfVacancies === 0\n            ? <ErrorMessage visuallyHiddenText={status}>\n                {status}\n              </ErrorMessage>\n            : <span style={{color: 'green', fontWeight: 600}}>\n                {status}\n              </span>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <Table.Panel>\n      <Table>\n        <Table.Head>\n          <Table.Row>\n            <Table.Cell>Training programme</Table.Cell>\n            <Table.Cell>Local team</Table.Cell>\n            <Table.Cell>Duration</Table.Cell>\n            <Table.Cell>Status</Table.Cell>\n          </Table.Row>\n        </Table.Head>\n        <Table.Body>{programmeTableRows}</Table.Body>\n      </Table>\n    </Table.Panel>\n  );\n} */\n\nexport function ProgrammeListing(props: BrProps) {\n  const { programmeListingTitle, programmes } = props.component.getModels();\n\n  const [region, setRegion] = React.useState<string>('All');\n  const [subSpecialty, setSubSpecialty] = React.useState<string>('All');\n\n  if (!programmes) {\n    return null;\n  }\n\n  // Builds region select box component\n  const programmeRegions = [...new Set(programmes.map((programme: Programme) => programme.regionName))] as string[];\n\n  let regionSelectBox = [];\n  let regionSelectOptions = [];\n  if (programmeRegions && programmeRegions.length > 1) {\n    programmeRegions.unshift('All');\n\n    for (const [index, regionName] of programmeRegions.entries()) {\n      regionSelectOptions.push(\n        <Select.Option key={index} value={regionName}>\n          {regionName}\n        </Select.Option>\n      );\n    }\n\n    regionSelectBox.push(\n      <Select\n        key=\"region\"\n        id=\"region\"\n        label=\"Filter by Local Team\"\n        onChange={event => setRegion((event.target as HTMLInputElement).value)}>\n        {regionSelectOptions}\n      </Select>\n    );\n  }\n\n\n  // Builds subspecialty select box component\n  const programmeSubSpecialties = [...new Set(programmes.map((programme: Programme) => programme.subSpecialty))] as string[];\n\n  let subSpecialtySelectBox = [];\n  let subSpecialtySelectOptions = [];\n  if (programmeSubSpecialties && programmeSubSpecialties.length > 1) {\n    programmeSubSpecialties.unshift('All');\n\n    for (const [index, subSpecialtyName] of programmeSubSpecialties.entries()) {\n      subSpecialtySelectOptions.push(\n        <Select.Option key={index} value={subSpecialtyName}>\n          {subSpecialtyName}\n        </Select.Option>\n      );\n    }\n\n    subSpecialtySelectBox.push(\n      <Select\n        key=\"subSpecialty\"\n        id=\"sub-specialty\"\n        label=\"Filter by Programme type\"\n        onChange={event => setSubSpecialty((event.target as HTMLInputElement).value)}>\n        {subSpecialtySelectOptions}\n      </Select>\n    );\n  }\n\n  let filteredProgrammes = programmes;\n  if (region !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.regionName === region);\n  }\n\n  if (subSpecialty !== 'All') {\n    filteredProgrammes = filteredProgrammes.filter((programme: Programme) => programme.subSpecialty === subSpecialty);\n  }\n\n  let programmeTableRows = [];\n  for (const [index, {\n    subSpecialty: subSpecialtyName,\n    programmePageUrl,\n    regionName,\n    regionPageUrl,\n    durationInYears,\n    contractType,\n    numberOfVacancies,\n    reopeningCalendar\n  }] of filteredProgrammes.entries()) {\n\n    let status = 'Open';\n    if (!numberOfVacancies) {\n      status = 'Closed';\n    }\n\n    if (!numberOfVacancies && reopeningCalendar) {\n      status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n    }\n\n    programmeTableRows.push(\n      <Table.Row key={index}>\n        <Table.Cell>\n          <a href={programmePageUrl}>{subSpecialtyName} at {regionName}</a>\n        </Table.Cell>\n        <Table.Cell>\n          <a href={regionPageUrl}>{regionName}</a>\n        </Table.Cell>\n        <Table.Cell>{durationInYears} Years, {contractType}</Table.Cell>\n        <Table.Cell>\n          {numberOfVacancies === 0\n            ? <ErrorMessage visuallyHiddenText={status}>\n                {status}\n              </ErrorMessage>\n            : <span style={{color: 'green', fontWeight: 600}}>\n                {status}\n              </span>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col width=\"full\">\n            <Panel>\n              <h2>{ programmeListingTitle }</h2>\n              <Panel.Group>\n                <Panel>\n                  {regionSelectBox}\n                  {subSpecialtySelectBox}\n                </Panel>\n              </Panel.Group>\n              {/* <Details.ExpanderGroup>\n                <Details expander>\n                  <Details.Summary>List view</Details.Summary>\n                  <Details.Text> */}\n                  <Table.Panel>\n                    <Table>\n                      <Table.Head>\n                        <Table.Row>\n                          <Table.Cell>Training programme</Table.Cell>\n                          <Table.Cell>Local team</Table.Cell>\n                          <Table.Cell>Duration</Table.Cell>\n                          <Table.Cell>Status</Table.Cell>\n                        </Table.Row>\n                      </Table.Head>\n                      <Table.Body>{programmeTableRows}</Table.Body>\n                    </Table>\n                  </Table.Panel>\n                  {/* </Details.Text>\n                </Details>\n                <Details expander>\n                  <Details.Summary>Map view</Details.Summary>\n                  <Details.Text>\n                    Yet to be implemented\n                  </Details.Text>\n                </Details>\n              </Details.ExpanderGroup> */}\n            </Panel>\n          </Col>\n        </Row>\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import {BrProps, BrPageContext} from \"@bloomreach/react-sdk\";\nimport React from \"react\";\nimport {\n  ActionLink,\n  Button,\n  CareCard as NHSUKCareCard,\n  Col,\n  Container,\n  ErrorMessage,\n  Fieldset,\n  Images,\n  Panel,\n  Promo,\n  Row,\n  SummaryList\n} from \"nhsuk-react-components\";\n\ninterface CardData {\n  title: string;\n  imageUrl: string | undefined;\n  summary: string;\n  linkLabel: string;\n  linkUrl: string | undefined;\n}\n\nfunction getFormattedDateForProgrammeStatus(time: number) {\n  return new Date(time).toLocaleString('en-GB', {year: 'numeric', month: 'long'});\n}\n\nfunction getProgrammeStatus(numberOfVacancies: number, reopeningCalendar: number | undefined) {\n  let programmeStatus = 'Open';\n  if (!numberOfVacancies) {\n    programmeStatus = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    programmeStatus = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  return programmeStatus;\n}\n\nfunction getPartTimeContactTypeLabel(partTimeContactType: string | undefined) {\n  if (!partTimeContactType) {\n    return '';\n }\n\n  let partTimeContactTypeLabel = '';\n  switch (partTimeContactType) {\n    case 'ltft':\n      partTimeContactTypeLabel = 'LTFT Applications considered';\n      break;\n    default:\n      break;\n }\n\n  return partTimeContactTypeLabel;\n}\n\nfunction getQualificationTypeLabel(qualificationType: string | undefined) {\n  if (!qualificationType) {\n    return '';\n }\n\n  let qualificationTypeLabel = '';\n  switch (qualificationType) {\n    case 'cct':\n      qualificationTypeLabel = 'Certificate of Completion of Training';\n      break;\n    default:\n      break;\n }\n\n  return qualificationTypeLabel;\n}\n\nfunction getEducationTypeLabel(educationType: string | undefined) {\n  if (!educationType) {\n    return '';\n }\n\n  let educationTypeLabel = '';\n  switch (educationType) {\n    case 'higher':\n      educationTypeLabel = 'Higher';\n      break;\n    default:\n      break;\n }\n\n  return educationTypeLabel;\n}\n\nfunction ProgrammeDetails({trainingType, document} : any) {\n  const {model: {\n    competitionRatio,\n    contractType,\n    durationInYears,\n    educationType,\n    entryRequirementsLinkUrl,\n    gmcNTSScore,\n    numberOfVacancies,\n    partTimeContractType,\n    qualification,\n    reopeningCalendar,\n    totalPosts\n }} = document;\n\n  // Builds programme status\n  let status = 'Open';\n  if (!numberOfVacancies) {\n    status = 'Closed';\n }\n\n  if (!numberOfVacancies && reopeningCalendar) {\n    status = 'Closed - Reopens ' + getFormattedDateForProgrammeStatus(reopeningCalendar);\n }\n\n  const programmeStatus = getProgrammeStatus(numberOfVacancies, reopeningCalendar);\n\n  return (\n    <Panel.Group>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Status</SummaryList.Key>\n            <SummaryList.Value>\n              {numberOfVacancies === 0\n                ? <ErrorMessage visuallyHiddenText={status}>\n                    {programmeStatus}\n                  </ErrorMessage>\n                : <span style={{color: 'green', fontWeight: 600}}>\n                    {programmeStatus}\n                  </span>\n             }\n            </SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Number of vacancies</SummaryList.Key>\n            <SummaryList.Value>{numberOfVacancies}/{totalPosts}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Competition ratio</SummaryList.Key>\n            <SummaryList.Value>{competitionRatio}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>GMC NTS Score</SummaryList.Key>\n            <SummaryList.Value>{gmcNTSScore}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Entry requirements</SummaryList.Key>\n            <SummaryList.Value>\n              <a href={entryRequirementsLinkUrl}> View person specification</a>\n            </SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n      <Panel>\n        <SummaryList noBorder>\n          <SummaryList.Row>\n            <SummaryList.Key>Learning stage</SummaryList.Key>\n            <SummaryList.Value>{trainingType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Programme type</SummaryList.Key>\n            <SummaryList.Value>{getEducationTypeLabel(educationType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Duration</SummaryList.Key>\n            <SummaryList.Value>{durationInYears} Years, {contractType}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Part time offered</SummaryList.Key>\n            <SummaryList.Value>{getPartTimeContactTypeLabel(partTimeContractType)}</SummaryList.Value>\n          </SummaryList.Row>\n          <SummaryList.Row>\n            <SummaryList.Key>Qualification</SummaryList.Key>\n            <SummaryList.Value>{getQualificationTypeLabel(qualification)}</SummaryList.Value>\n          </SummaryList.Row>\n        </SummaryList>\n      </Panel>\n    </Panel.Group>\n  )\n}\n\nfunction KeyStaffs({keyStaffs}: any) {\n  const page = React.useContext(BrPageContext);\n\n  if (!keyStaffs || !page) {\n    return null;\n  }\n\n  let keyStaffPanelGroups = [];\n  let keyStaffPanels = [];\n  for (const [index, keyStaffRef] of keyStaffs.entries()) {\n    const keyStaffDoc = page.getContent(keyStaffRef);\n\n    if (!keyStaffDoc) {\n      continue;\n    }\n\n    const {name, title, department, image: imageRef} = keyStaffDoc.getData<DocumentData>();\n\n    const image = imageRef && page.getContent(imageRef);\n\n    keyStaffPanels.push(\n      <Panel key={index}>\n        {image &&\n          <Images\n            src={image.getUrl()}\n            alt={name}\n            srcSet={image.getUrl() + ' 640w'} />\n        }\n        <h3>{name}</h3>\n        <p>{department}</p>\n        <p>{title}</p>\n      </Panel>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === keyStaffs.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          keyStaffPanels.push(\n            <Panel key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Panel>\n          );\n        }\n      }\n\n      keyStaffPanelGroups.push(\n        <Panel.Group key={(index + 1) / 3}>\n          {keyStaffPanels}\n        </Panel.Group>\n      );\n\n      keyStaffPanels = [];\n    }\n  }\n\n  return(\n    <>\n      <h2>Key Staff</h2>\n      {keyStaffPanelGroups}\n    </>\n  );\n}\n\nfunction PanelCard(cardData: CardData) {\n  return (\n    <Panel.Group>\n      <Panel>\n        <h3>{cardData.title}</h3>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        {cardData.linkLabel && cardData.linkUrl && (\n          <ActionLink href={cardData.linkUrl}>\n            {cardData.linkLabel}\n          </ActionLink>\n        )}\n      </Panel>\n    </Panel.Group>\n  );\n}\n\nfunction PromoCard(cardData: CardData) {\n  return (\n    <Promo.Group>\n      <Promo\n        href={cardData.linkUrl || undefined}\n        imageSrc={cardData.imageUrl || undefined}\n      >\n        <Promo.Heading>{cardData.title}</Promo.Heading>\n        <Promo.Description>\n          <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n        </Promo.Description>\n      </Promo>\n    </Promo.Group>\n  );\n}\n\nfunction CareCard(cardData: CardData) {\n  return (\n    <NHSUKCareCard type=\"urgent\">\n      <NHSUKCareCard.Heading>{cardData.title}</NHSUKCareCard.Heading>\n      <NHSUKCareCard.Content>\n        <div dangerouslySetInnerHTML={{__html: cardData.summary}} />\n      </NHSUKCareCard.Content>\n    </NHSUKCareCard>\n  );\n}\n\nfunction Section({sectionIndex, trainingType, document} : any) {\n  const page = React.useContext(BrPageContext);\n  const {model: {programmeSections}} = document;\n  const section = programmeSections[sectionIndex];\n  let card;\n\n  if (section.cardType) {\n\n    // Builds CardData\n    let cardData = {} as CardData;\n    const cardDoc = section.cardDocument && page?.getContent(section.cardDocument);\n\n    if (cardDoc) {\n      const {title, image: imageRef, abstract, _links} = cardDoc.getData<DocumentData>();\n\n      cardData.title = cardData.linkLabel = title;\n\n      const cardImage = imageRef && page?.getContent(imageRef);\n      cardData.imageUrl = cardImage?.getUrl();\n      cardData.summary = '<p>' + abstract + '</p>';\n      cardData.linkLabel = title;\n\n      cardData.linkUrl = cardDoc.getUrl();\n      if (_links?.site.type === 'internal') {\n        cardData.linkUrl = _links?.site!.href;\n     }\n   }\n\n    cardData.title = section.cardTitle || cardData.title;\n    const cardImage = section.cardImage && page?.getContent(section.cardImage);\n    cardData.imageUrl = cardImage?.getUrl();\n    cardData.summary = section.cardSummary || cardData.summary;\n    cardData.linkLabel = section.cardLinkLabel || cardData.linkLabel;\n    cardData.linkUrl = section.cardLinkUrl || cardData.linkUrl;\n\n    switch (section.cardType) {\n      case \"promo\":\n        card = <PromoCard  {...cardData} />;\n        break;\n      case \"care\":\n        card = <CareCard {...cardData} />;\n        break;\n      case \"panel\":\n      default:\n        card = <PanelCard {...cardData} />;\n   }\n }\n\n  let mainLink;\n\n  if (section.mainLinkLabel && section.mainLinkUrl) {\n    const mainLinkType = section.mainLinkType ? section.mainLinkType : 'actionLink';\n\n    switch (mainLinkType) {\n      case \"primaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled}>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"secondaryButton\":\n        mainLink =\n          <Button href={section.mainLinkUrl} disabled={section.mainLinkDisabled} secondary>\n            {section.mainLinkLabel}\n          </Button>\n        break;\n      case \"actionLink\":\n      default:\n        mainLink =\n          <ActionLink href={section.mainLinkUrl}>\n            {section.mainLinkLabel}\n          </ActionLink>\n   }\n }\n\n  let additionalSections;\n\n  if (section.renderProgrammeDetails) {\n    additionalSections = <ProgrammeDetails trainingType={trainingType} document={document} />;\n }\n\n  if (section.renderKeyStaffSectionBelowThisSection) {\n    additionalSections = <KeyStaffs keyStaffs={document.model.keyStaffs} />;\n }\n\n  return (\n    <>\n      <Row>\n        <Col width=\"two-thirds\">\n          <div dangerouslySetInnerHTML={{__html: section.mainBody.value}} />\n          {mainLink}\n        </Col>\n        <Col width=\"one-third\">{card}</Col>\n      </Row>\n      <Row>\n        <Col width=\"full\">\n          {additionalSections}\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport function ProgrammePageContent(props: BrProps) {\n  const {subSpecialty, regionName, trainingType, document: documentRef} = props.component.getModels();\n  const document = documentRef && props.page.getContent(documentRef);\n\n  if (!document) {\n    return null;\n }\n\n  const {programmeSections} = document.getData<DocumentData>();\n\n  return (\n    <>\n      <Container>\n        <Fieldset>\n          <Fieldset.Legend>{trainingType}</Fieldset.Legend>\n        </Fieldset>\n        <Fieldset>\n          <Fieldset.Legend isPageHeading>{subSpecialty} at {regionName}</Fieldset.Legend>\n        </Fieldset>\n        {programmeSections.map((section: any, index: number) => (\n          <Section key={index} sectionIndex={index} trainingType={trainingType} document={document} />\n        ))}\n      </Container>\n      <br/>\n    </>\n  );\n}\n","import {connectPagination} from 'react-instantsearch-dom';\nimport React, {Component} from 'react';\nimport {Pagination} from \"nhsuk-react-components\";\n\ninterface PaginationProps {\n    currentRefinement: number,\n    nbPages: number,\n    refine: any,\n    createURL: any\n}\n\nclass SearchPagination extends Component<PaginationProps> {\n\n    onChange = (event: any, page: number) => {\n        event.preventDefault();\n        return this.props.refine(page);\n    };\n\n    render() {\n        let {currentRefinement, nbPages, createURL} = this.props;\n\n        let prevButton;\n        if (currentRefinement > 1) {\n            const prevPage = currentRefinement - 1;\n\n            prevButton =\n                <Pagination.Link previous href={createURL(prevPage)}\n                                 onClick={(event) => this.onChange(event, prevPage)}>\n                    Page {prevPage} of {nbPages}\n                </Pagination.Link>;\n        }\n\n        let nextButton;\n        if (currentRefinement < nbPages) {\n            const nextPage = currentRefinement + 1;\n\n            nextButton =\n                <Pagination.Link next href={createURL(nextPage)} onClick={(event) => this.onChange(event, nextPage)}>\n                    Page {nextPage} of {nbPages}\n                </Pagination.Link>;\n        }\n        return (\n            <div style={{minWidth: 400}}>\n                <Pagination>\n                    {prevButton}\n                    {nextButton}\n                </Pagination>\n            </div>\n        )\n    }\n}\n\nexport default connectPagination(SearchPagination);\n","import algoliasearch from 'algoliasearch/lite';\nimport {\n    InstantSearch,\n    Configure,\n    SearchBox,\n    connectRefinementList,\n    connectHits,\n    Snippet,\n    connectStats,\n    connectSortBy,\n    Highlight,\n} from 'react-instantsearch-dom';\nimport * as React from 'react';\nimport './Search.css';\nimport {CloseIcon, SearchIcon} from \"nhsuk-react-components\";\nimport {Hit, HitsProvided, RefinementListProvided} from \"react-instantsearch-core\";\nimport Checkboxes from \"nhsuk-react-components/lib/components/checkboxes\";\nimport Pagination from \"./SearchPagination\";\nimport Select from \"nhsuk-react-components/lib/components/select\";\nimport {BrProps} from \"@bloomreach/react-sdk\";\n\nexport function Search(props: BrProps) {\n\n    const indexName = props.component.getParameters()['indexName'] || '';\n    const appId = props.component.getParameters()['appId'] || '';\n    const apiKey = props.component.getParameters()['apiKey'] || '';\n\n    if (!indexName || !apiKey || !appId) {\n        console.log(\"Search component is not configured correctly!\");\n        return null;\n    }\n\n    const searchClient = algoliasearch(appId, apiKey);\n\n    return (\n        <div className=\"nhsuk-width-container\">\n            <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/reset-min.css'\n                  integrity='sha256-t2ATOGCtAIZNnzER679jwcFcKYfLlw01gli6F6oszk8=' crossOrigin='anonymous'/>\n            <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/instantsearch.css@7.3.1/themes/algolia-min.css\"\n                  integrity=\"sha256-HB49n/BZjuqiCtQQf49OdZn63XuKFaxcIHWf0HNKte8=\" crossOrigin=\"anonymous\"/>\n\n            <InstantSearch searchClient={searchClient} indexName={indexName}>\n                <div className=\"left-panel\">\n                    <div className=\"custom-refinement-section\">\n                        <div className=\"custom-refinement-list\">\n                            <h5>Category</h5>\n                            <CustomRefinementList attribute=\"category\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Region</h5>\n                            <CustomRefinementList attribute=\"region\"/>\n                        </div>\n\n                        <div className=\"custom-refinement-list\">\n                            <h5>Speciality</h5>\n                            <CustomRefinementList attribute=\"speciality\"/>\n                        </div>\n                    </div>\n                    <Configure hitsPerPage={5}/>\n                </div>\n                <div className=\"right-panel\">\n                    <div className=\"custom-search\">\n                        <SearchBox submit={<SearchIcon/>} reset={<CloseIcon/>}/>\n                    </div>\n                    <CustomSortBy\n                        defaultRefinement=\"articles\"\n                        items={[\n                            {value: 'articles', label: 'Relevance'},\n                            {value: 'articles_date_desc', label: 'Most recently modified'}\n                        ]}\n                    />\n                    <CustomStats/>\n                    <CustomHits/>\n                    <Pagination/>\n                </div>\n            </InstantSearch>\n        </div>\n    );\n}\n\nconst Hits = ({hits}: HitsProvided<Hit>) => (\n    <div>\n        <ul className=\"nhsuk-list nhsuk-list--border\">\n            {hits.map(hit => (\n                <div key={hit.objectID}>\n                    <li>\n                        <h2 className=\"nhsuk-u-margin-bottom-1\" style={{\"fontWeight\": 400, \"fontSize\": \"19px\"}}>\n                            <a\n                                className=\"app-search-results-item\" href={`/site/${hit.path}`}>\n                                <Highlight attribute=\"title\" hit={hit}/>\n                            </a>\n                        </h2>\n                        <p className=\"nhsuk-body-s nhsuk-u-margin-top-1\">\n                            <Highlight attribute=\"introduction\" hit={hit}/>\n                            <Snippet hit={hit} attribute=\"summary\"/>;\n                            <strong>\n                                <Highlight attribute=\"category\" hit={hit}/>\n                            </strong>\n                        </p>\n                    </li>\n                </div>\n            ))}\n        </ul>\n    </div>\n);\n\nconst CustomHits = connectHits(Hits);\n\nconst RefinementList = ({items, refine}: RefinementListProvided) => (\n    <Checkboxes>\n        {items.map(item => (\n            <Checkboxes.Box\n                key={item.label}\n                onClick={() => {\n                    return refine(item.value);\n                }}\n            >\n                {item.label} ({item.count})\n            </Checkboxes.Box>\n        ))}\n    </Checkboxes>\n);\n\nconst CustomRefinementList = connectRefinementList(RefinementList);\n\ninterface StatsProvided {\n    nbHits: number;\n    processingTimeMS: number;\n}\n\nconst Stats = ({nbHits}: StatsProvided) => (\n    <p className=\"nhsuk-body-s nhsuk-u-margin-bottom-3\" style={{paddingLeft: \"65%\", paddingBottom: '20px'}}>\n        Found <b>{nbHits}</b> matching results.\n    </p>\n);\nconst CustomStats = connectStats(Stats);\n\n\nconst SortBy = ({items, refine, createURL}: any) => (\n    <Select\n        label=\"Sort by\"\n        onChange={(event: any) => {\n            event.preventDefault();\n            refine(event.target.value)\n        }}\n        style={{fontSize: \"16px\"}}\n    >\n        {items.map((item: { value: string, label: string, isRefined: boolean }) => (\n            <Select.Option\n                key={item.value}\n                value={item.value}\n                href={createURL(item.value)}>\n                {item.label}\n            </Select.Option>\n        ))}\n    </Select>\n);\n\nconst CustomSortBy = connectSortBy(SortBy);","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {Promo} from \"nhsuk-react-components\";\n\nexport function SubHubListing(props: BrProps) {\n  const {subHubListingTitle, subHubDocs} = props.component.getModels();\n\n  if (!subHubDocs) {\n    return null;\n }\n\n  // Builds SubHub page (promo) cards\n  let specialtyCards = [];\n  let specialtyGroupedCards = [];\n  for (const [index, subHubDocRef] of subHubDocs.entries()) {\n    const subHubDoc = subHubDocRef && props.page.getContent(subHubDocRef);\n\n    if (!subHubDoc) {\n      continue;\n   }\n\n    const {title, abstract, image: imageRef, _links} = subHubDoc.getData<DocumentData>();\n\n    const image = imageRef && props.page.getContent(imageRef);\n\n    let cardUrl = subHubDoc.getUrl();\n    if (_links?.site.type === 'internal') {\n      cardUrl = _links?.site!.href;\n   }\n\n    specialtyCards.push(\n      <Promo\n        key={index}\n        href={cardUrl}\n        imageSrc={image?.getUrl()}\n      >\n        <Promo.Heading>{title}</Promo.Heading>\n        <Promo.Description>{abstract}</Promo.Description>\n      </Promo>\n    );\n\n    if (((index + 1) % 3 === 0) || (index + 1 === subHubDocs.length)) {\n\n      // Adds empty promo cards to fill in the last row with 3 cards\n      // in case if it contains less than 3\n      if (((index + 1) % 3 !== 0)) {\n        for (let j = 0; j < 3 - ((index + 1) % 3); j++) {\n          specialtyCards.push(\n            <Promo key={index + j + 1} style={{visibility: 'hidden'}}>\n            </Promo>\n          );\n       }\n     }\n\n      specialtyGroupedCards.push(\n        <Promo.Group key={(index + 1) / 3}>\n          {specialtyCards}\n        </Promo.Group>\n      );\n\n      specialtyCards = [];\n   }\n }\n\n  return (\n    <>\n      <h2>{subHubListingTitle}</h2>\n      {specialtyGroupedCards}\n      <br/>\n    </>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {Promo} from \"nhsuk-react-components\";\n\nexport function TrainingByLearningStage(props: BrProps) {\n  const {trainingByLearningStageTitle, trainingByLearningStageDocs} = props.component.getModels();\n\n  if (!trainingByLearningStageDocs) {\n    return null;\n }\n\n  // Builds SubHub page cards\n  let subHubCards = [];\n  for (const [index, trainingByLearningDocRef] of trainingByLearningStageDocs.entries()) {\n    const trainingByLearningDoc = trainingByLearningDocRef && props.page.getContent(trainingByLearningDocRef);\n\n    if (!trainingByLearningDoc) {\n      continue;\n   }\n\n    const {title, abstract, image: imageRef, _links} = trainingByLearningDoc.getData<DocumentData>();\n\n    const image = imageRef && props.page.getContent(imageRef);\n\n    let cardUrl = trainingByLearningDoc.getUrl();\n    if (_links?.site.type === 'internal') {\n      cardUrl = _links?.site!.href;\n   }\n\n    subHubCards.push(\n      <Promo\n        key={index}\n        href={cardUrl}\n        imageSrc={image?.getUrl()}\n      >\n        <Promo.Heading>{title}</Promo.Heading>\n        <Promo.Description>{abstract}</Promo.Description>\n      </Promo>\n    );\n }\n\n  return (\n    <>\n      <h2>{trainingByLearningStageTitle}</h2>\n      <Promo.Group>\n        {subHubCards}\n      </Promo.Group>\n      <br/>\n    </>\n  );\n}\n","import {BrProps} from '@bloomreach/react-sdk';\nimport React from 'react';\nimport {ContentsList} from \"nhsuk-react-components\";\n\ninterface Link {\n  label: string,\n  url: string\n}\n\nexport function TrainingByLocalTeams(props: BrProps) {\n  const {trainingByLocalTeamsTitle, trainingByLocalTeamsLinks}: {trainingByLocalTeamsTitle: string, trainingByLocalTeamsLinks: Link[]} = props.component.getModels();\n\n  if (!trainingByLocalTeamsLinks) {\n    return null;\n }\n\n  return (\n    <>\n      <h2>{trainingByLocalTeamsTitle}</h2>\n        <ContentsList>\n          {trainingByLocalTeamsLinks.map((link, index) => {\n            return (\n              <ContentsList.Item key={index} href={link.url}>\n                <h3>{link.label}</h3>\n              </ContentsList.Item>\n            )\n         })}\n        </ContentsList>\n        <br/>\n    </>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage } from '@bloomreach/react-sdk';\nimport {\n  Article,\n  AzureADProfile,\n  Breadcrumb,\n  EducationHubListing,\n  Footer,\n  HeroBanner,\n  Menu,\n  PageContent,\n  ProgrammeListing,\n  ProgrammePageContent,\n  SharepointFiles,\n  Search,\n  SubHubListing,\n  TrainingByLearningStage,\n  TrainingByLocalTeams,\n} from \"./components\";\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  var channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n\n  var liveCMSBaseUrl = process.env.REACT_APP_LIVE_BR_BASE_URL!;\n  var previewCMSBaseUrl = process.env.REACT_APP_PREVIEW_BR_BASE_URL!;\n  var siteContextRemovedPath = props.location.pathname;\n\n  channels.forEach((channel) => {\n    if (props.location.pathname.startsWith('/site/' + channel)) {\n      // Appending channel to live cmsBaseUrl\n      liveCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/' + channel, '');\n    }\n\n    if (props.location.pathname.startsWith('/site/_cmsinternal/' + channel)) {\n      // Appending channel to preview cmsBaseUrl\n      previewCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/_cmsinternal/' + channel, '/site/_cmsinternal');\n    }\n  });\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  if (siteContextRemovedPath.startsWith('/site') && !siteContextRemovedPath.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: liveCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: previewCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      // appending `_maxreflevel=<max_content_item_ref_depth_level>` parameter\n      // in order to get additional depth level content item references.\n      path: `${siteContextRemovedPath}${props.location.search}${props.location.search ? '&' : '?'}_maxreflevel=2`,\n    },\n  };\n\n  const mapping = {\n    Article,\n    \"AzureAD Profile\": AzureADProfile,\n    Breadcrumb,\n    EducationHubListing,\n    \"Hero Banner\": HeroBanner,\n    \"Sharepoint Files\": SharepointFiles,\n    PageContent,\n    ProgrammeListing,\n    ProgrammePageContent,\n    Search,\n    SubHubListing,\n    TrainingByLearningStage,\n    TrainingByLocalTeams,\n  };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <BrComponent path=\"breadcrumb\" />\n\n      <BrComponent path=\"hero\" />\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          {/* <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n              ) }\n            </BrPageContext.Consumer> */}\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      {/* <BrComponent path=\"programme\" /> */}\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}