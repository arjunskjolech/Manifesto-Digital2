{"version":3,"sources":["components/Article.tsx","components/AzureADProfile.tsx","components/Footer.tsx","components/HeroBanner.tsx","components/Menu.tsx","components/SharepointFiles.tsx","App.tsx","index.tsx"],"names":["Article","props","articleDocumentRef","component","getModels","articleDocument","page","getContent","getData","title","summary","dangerouslySetInnerHTML","__html","value","AzureADProfile","user","React","useContext","BrPageContext","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","map","group","index","key","isPreview","label","Footer","List","columns","ListItem","href","Copyright","HeroBanner","heroBannerDocumentRef","heroBannerDocument","heading","summaryText","Heading","Text","MenuLink","item","_links","site","NavItem","name","disabled","Logout","action","method","secondary","Menu","BrComponentContext","currentUrl","toJSON","renderLogoutButton","endsWith","channels","process","split","logoUrl","forEach","channel","indexOf","menu","logoOrgTheme","orgName","orgSplit","orgDescriptor","Container","Logo","Content","MenuToggle","Search","Nav","className","siteMenuItems","SharepointFiles","sharepointSiteFiles","Object","keys","Item","url","target","fileType","modifiedBy","Date","modifiedDate","toUTCString","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","path","liveCMSBaseUrl","previewCMSBaseUrl","siteContextRemovedPath","location","pathname","startsWith","replace","substring","length","configuration","httpClient","options","live","cmsBaseUrl","spaBaseUrl","preview","search","mapping","role","id","to","document","getElementById"],"mappings":"2PAIO,SAASA,EAAQC,GAAiB,IACdC,EAAuBD,EAAME,UAAUC,YAAxDC,gBACFA,EAAkBH,GAAsBD,EAAMK,KAAKC,WAAWL,GAEpE,IAAKG,EACH,OAAO,KAL6B,MAQXA,EAAgBG,UAAnCC,EAR8B,EAQ9BA,MAAOC,EARuB,EAQvBA,QAEf,OACE,kBAAC,IAAD,KACE,4BAAMD,GACN,yBAAKE,wBAAyB,CAAEC,OAAQF,EAAQG,UCN/C,SAASC,EAAeb,GAAiB,IACtCc,EAA8Bd,EAAME,UAAUC,YAA9CW,KACFT,EAAOU,IAAMC,WAAWC,iBAE9B,OAAKH,EAaH,oCACA,qDACA,kBAAC,IAAD,CAAaI,UAAQ,GACnB,kBAAC,IAAYC,IAAb,KACE,kBAAC,IAAYC,IAAb,aACA,kBAAC,IAAYC,MAAb,KAAoBP,EAAKQ,cAE3B,kBAAC,IAAYH,IAAb,KACE,kBAAC,IAAYC,IAAb,iBACA,kBAAC,IAAYC,MAAb,KAAoBP,EAAKS,WAE3B,kBAAC,IAAYJ,IAAb,KACE,kBAAC,IAAYC,IAAb,kBACA,kBAAC,IAAYC,MAAb,KAAoBP,EAAKU,WAE3B,kBAAC,IAAYL,IAAb,KACE,kBAAC,IAAYC,IAAb,eACA,kBAAC,IAAYC,MAAb,KACIP,EAAKW,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAChB,kBAAC,IAAD,CAAUC,IAAKD,GAAQD,UA/B3BtB,GAAQA,EAAKyB,YAEb,kBAAC,IAAD,CAAgBC,MAAM,yBACpB,uMAIG,KCnBN,SAASC,IACd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAUC,KAAX,CAAgBC,SAAO,GACrB,kBAAC,IAAUC,SAAX,CAAoBC,KAAK,iCAAzB,aACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,gCAAzB,YACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,kCAAzB,cACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,iDAAzB,wBAGA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,wCAAzB,WACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,qCAAzB,iBACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,oCAAzB,gBACA,kBAAC,IAAUD,SAAX,CAAoBC,KAAK,mDAAzB,YAIF,kBAAC,IAAUC,UAAX,8BCjBC,SAASC,EAAWtC,GAAiB,IACduC,EAA0BvC,EAAME,UAAUC,YAA9DqC,mBACFA,EAAqBD,GAAyBvC,EAAMK,KAAKC,WAAWiC,GAE1E,IAAKC,EACH,OAAO,KALgC,MAQRA,EAAmBjC,UAA5CkC,EARiC,EAQjCA,QAASC,EARwB,EAQxBA,YAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAKC,QAAN,KAAgBF,GAChB,kBAAC,IAAKG,KAAN,KAAaF,ICCnB,SAASG,EAAT,GAA4C,IAAxBC,EAAuB,EAAvBA,KAGlB,OAAKA,EAAKC,OAAOC,KAIV,kBAAC,IAAOC,QAAR,CAAgBb,KAAMU,EAAKC,OAAOC,KAAKZ,MAAOU,EAAKI,MAHjD,kBAAC,IAAOD,QAAR,CAAgBE,UAAQ,GAAEL,EAAKI,MAW1C,SAASE,IACP,OACE,oCACA,6BAAK,6BADL,OAEA,kBAAC,IAAD,CAAMC,OAAO,eAAeC,OAAO,QAAnC,WACc,kBAAC,IAAD,CAAQC,WAAS,GAAjB,YAMX,SAASC,IACd,IAAMtD,EAAYa,IAAMC,WAAWyC,sBAC7BpD,EAAOU,IAAMC,WAAWC,iBAE9B,IAAKf,IAAcG,EACjB,OAAO,KAGT,IAAMqD,EAAarD,EAAKsD,SAAUZ,OAAQC,KAAKZ,KAI3CwB,GAAqB,EACrBF,EAAWG,SAAS,qBACtBD,GAAqB,GAIvB,IAAME,EAAWC,yBAA6CC,MAAM,KAChEC,EAAU,QACdH,EAASI,SAAQ,SAACC,IAC+B,GAA3CT,EAAWU,QAAQ,SAAWD,KAA0E,GAAxDT,EAAWU,QAAQ,sBAAwBD,KAC7FF,EAAU,SAAWE,MAtBJ,IA0BbE,EAASnE,EAAUC,YAAnBkE,KACAC,EAAiBpE,EAAUC,YAA3BmE,aAER,OACE,kBAAC,IAAD,CAAQC,QAAUD,EAAaC,QAAUC,SAAWF,EAAaE,SAAWC,cAAeH,EAAaG,eACtG,kBAAC,IAAOC,UAAR,KACE,kBAAC,IAAOC,KAAR,CAAavC,KAAO6B,IACpB,kBAAC,IAAOW,QAAR,KACE,kBAAC,IAAOC,WAAR,MACA,kBAAC,IAAOC,OAAR,MACElB,GAAsB,kBAACR,EAAD,QAQ5B,kBAAC,IAAO2B,IAAR,CAAYC,UAAW3E,EAAKyB,YAAc,kBAAoB,IAI5D,kBAAC,qBAAD,CAAoBuC,KAAMA,IACxBA,EAAKY,cAAcvD,KAAI,SAACoB,EAAMlB,GAAP,OACvB,kBAACiB,EAAD,CAAUhB,IAAKD,EAAOkB,KAAMA,SC1F/B,SAASoC,EAAgBlF,GAAiB,IACvCmF,EAAwBnF,EAAME,UAAUC,YAAxCgF,oBACF9E,EAAOU,IAAMC,WAAWC,iBAE9B,OAAKkE,EAaH,oCACA,oDACEC,OAAOC,KAAKF,GAAqBzD,KAAI,SAACG,EAAKD,GAC3C,OACE,kBAAC,IAAD,CAAcC,IAAKD,GACjB,kBAAC,IAAYT,IAAb,KAAiB,2BAAIU,IACnBsD,EAAoBtD,GAAKH,KAAI,SAACoB,EAA+GlB,GAC7I,OACE,oCACA,2BACA,kBAAC,IAAa0D,KAAd,CAAmBlD,KAAMU,EAAKyC,IAAK1D,IAAKD,EAAO4D,OAAO,UACnD1C,EAAKtC,OAFR,4BAIsCsC,EAAK2C,SAJ3C,wBAI0E3C,EAAK4C,WAJ/E,WAImG,IAAIC,KAAK7C,EAAK8C,cAAcC,cAJ/H,cArBNxF,GAAQA,EAAKyB,YAEb,kBAAC,IAAD,CAAgBC,MAAM,wBACpB,mMAIG,KCVb+D,IAAMC,aAAaC,QAAQC,KAAI,SAAAC,GAAM,kCAAUA,GAAV,IAAkBC,iBAAiB,OCKxEC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQpG,UDNX,SAAaF,GAE1B,IAAI8D,EAAWC,yBAA6CC,MAAM,KAE9DuC,EAAiBxC,6BACjByC,EAAoBzC,0CACpB0C,EAAyBzG,EAAM0G,SAASC,SAE5C7C,EAASI,SAAQ,SAACC,GACZnE,EAAM0G,SAASC,SAASC,WAAW,SAAWzC,KAEhDoC,GAAkB,IAAMpC,EACxBsC,EAAyBzG,EAAM0G,SAASC,SAASE,QAAQ,SAAW1C,EAAS,KAG3EnE,EAAM0G,SAASC,SAASC,WAAW,sBAAwBzC,KAE7DqC,GAAqB,IAAMrC,EAC3BsC,EAAyBzG,EAAM0G,SAASC,SAASE,QAAQ,sBAAwB1C,EAAS,0BAM1FsC,EAAuBG,WAAW,WAAaH,EAAuBG,WAAW,wBACnFH,EAAyBzG,EAAM0G,SAASC,SAASG,UAAU,QAAQC,SAGrE,IAAMC,EAAgB,CACpBC,WAAYnB,IACZoB,QAAS,CACPC,KAAM,CACJC,WAAYb,EACZc,WAAYtD,IAEduD,QAAS,CACPF,WAAYZ,EACZa,WAAYtD,+CAGhBiC,QAAS,CACPM,KAAK,GAAD,OAAKG,GAAL,OAA8BzG,EAAM0G,SAASa,UAG/CC,EAAU,CAAEzH,UAAS,kBAAmBc,EAAgB,cAAeyB,EAAY,mBAAoB4C,GAE7G,OACE,kBAAC,SAAD,CAAQ8B,cAAeA,EAAeQ,QAASA,GAC7C,gCACE,yBAAKxC,UAAU,yDAAyDyC,KAAK,cAC3E,yBAAKzC,UAAU,aAQb,yBAAKA,UAAU,4BACb,kBAAC,cAAD,CAAasB,KAAK,QAChB,kBAAC9C,EAAD,WAMV,kBAAC,cAAD,CAAa8C,KAAK,SAClB,yBAAKtB,UAAU,yBACb,0BAAMA,UAAU,qBAAqB0C,GAAG,eAOtC,kBAAC,cAAD,CAAapB,KAAK,WAGtB,kBAACtE,EAAD,UCvEA,kBAAC,IAAD,CAAU2F,GAAG,QAGjBC,SAASC,eAAe,W","file":"static/js/main.3239373e.chunk.js","sourcesContent":["import { BrProps } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Panel } from \"nhsuk-react-components\";\n\nexport function Article(props: BrProps) {\n  const { articleDocument: articleDocumentRef } = props.component.getModels();\n  const articleDocument = articleDocumentRef && props.page.getContent(articleDocumentRef);\n\n  if (!articleDocument) {\n    return null;\n  }\n\n  const { title, summary } = articleDocument.getData<DocumentData>();\n\n  return (\n    <Panel>\n      <h2>{ title }</h2>\n      <div dangerouslySetInnerHTML={{ __html: summary.value }} />\n    </Panel>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\ninterface UserProps {\n  displayName: string,\n  username: string,\n  jobTitle: string,\n  groups: string[]\n}\n\nexport function AzureADProfile(props: BrProps) {\n  const { user }: { user: UserProps } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group, index) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { Hero } from \"nhsuk-react-components\";\n\nexport function HeroBanner(props: BrProps) {\n  const { heroBannerDocument: heroBannerDocumentRef } = props.component.getModels();\n  const heroBannerDocument = heroBannerDocumentRef && props.page.getContent(heroBannerDocumentRef);\n\n  if (!heroBannerDocument) {\n    return null;\n  }\n\n  const { heading, summaryText } = heroBannerDocument.getData<DocumentData>();\n\n  return (\n    <Hero>\n      <Hero.Heading>{ heading }</Hero.Heading>\n      <Hero.Text>{ summaryText }</Hero.Text>\n    </Hero>\n  );\n}\n","import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form } from \"nhsuk-react-components\";\n\ninterface LogoOrgTheme {\n  orgName: string,\n  orgSplit: string,\n  orgDescriptor: string\n}\n\ninterface LogoOrgThemeModels {\n  logoOrgTheme: LogoOrgTheme\n}\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  // const page = React.useContext(BrPageContext)!;\n\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  return <Header.NavItem href={item._links.site.href}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  const currentUrl = page.toJSON()!._links!.site.href;\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page` page\n  let renderLogoutButton = false;\n  if (currentUrl.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  // Builds logo url based on current page path\n  const channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n  let logoUrl = '/site';\n  channels.forEach((channel) => {\n    if (currentUrl.indexOf('/site/' + channel) != -1 || currentUrl.indexOf('/site/_cmsinternal/' + channel) != -1) {\n      logoUrl = '/site/' + channel;\n    }\n  });\n\n  const { menu } = component.getModels<MenuModels>();\n  const { logoOrgTheme } = component.getModels<LogoOrgThemeModels>();\n\n  return (\n    <Header orgName={ logoOrgTheme.orgName } orgSplit={ logoOrgTheme.orgSplit } orgDescriptor={logoOrgTheme.orgDescriptor!}>\n      <Header.Container>\n        <Header.Logo href={ logoUrl} />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search />\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} />\n        )) }\n      </Header.Nav>\n    </Header>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage } from '@bloomreach/react-sdk';\nimport { Article, AzureADProfile, Footer, HeroBanner, Menu, SharepointFiles } from './components';\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  var channels = process.env.REACT_APP_BR_SUPPORTED_CHANNELS!.split(',');\n\n  var liveCMSBaseUrl = process.env.REACT_APP_LIVE_BR_BASE_URL!;\n  var previewCMSBaseUrl = process.env.REACT_APP_PREVIEW_BR_BASE_URL!;\n  var siteContextRemovedPath = props.location.pathname;\n\n  channels.forEach((channel) => {\n    if (props.location.pathname.startsWith('/site/' + channel)) {\n      // Appending channel to live cmsBaseUrl\n      liveCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/' + channel, '');\n    }\n\n    if (props.location.pathname.startsWith('/site/_cmsinternal/' + channel)) {\n      // Appending channel to preview cmsBaseUrl\n      previewCMSBaseUrl += '/' + channel;\n      siteContextRemovedPath = props.location.pathname.replace('/site/_cmsinternal/' + channel, '/site/_cmsinternal');\n    }\n  });\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  if (siteContextRemovedPath.startsWith('/site') && !siteContextRemovedPath.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: liveCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: previewCMSBaseUrl,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      path: `${siteContextRemovedPath}${props.location.search}`,\n    },\n  };\n  const mapping = { Article, 'AzureAD Profile': AzureADProfile, 'Hero Banner': HeroBanner, 'Sharepoint Files': SharepointFiles };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <BrComponent path=\"hero\" />\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          {/* <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n            ) }\n          </BrPageContext.Consumer> */}\n          {/* <BrComponent path=\"article\" /> */}\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}