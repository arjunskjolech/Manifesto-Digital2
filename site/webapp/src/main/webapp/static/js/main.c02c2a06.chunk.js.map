{"version":3,"sources":["components/Menu.tsx","components/Footer.tsx","components/AzureADProfile.tsx","components/SharepointFiles.tsx","App.tsx","index.tsx"],"names":["MenuLink","item","_links","site","NavItem","href","name","disabled","Logout","action","method","secondary","Menu","component","React","useContext","BrComponentContext","page","BrPageContext","renderLogoutButton","toJSON","endsWith","menu","getModels","orgName","orgSplit","orgDescriptor","Container","Logo","Content","MenuToggle","Search","Nav","className","isPreview","siteMenuItems","map","index","key","Footer","List","columns","ListItem","Copyright","AzureADProfile","props","user","noBorder","Row","Key","Value","displayName","username","jobTitle","groups","group","label","SharepointFiles","sharepointSiteFiles","Object","keys","Item","url","target","title","fileType","modifiedBy","Date","modifiedDate","toUTCString","axios","interceptors","request","use","config","withCredentials","ReactDOM","render","path","siteContextRemovedPath","location","pathname","startsWith","substring","length","configuration","httpClient","options","live","cmsBaseUrl","process","spaBaseUrl","preview","search","mapping","role","id","Consumer","isPageHeading","getTitle","to","document","getElementById"],"mappings":"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","file":"static/js/main.c02c2a06.chunk.js","sourcesContent":["import React from 'react';\nimport { BrComponentContext, BrManageMenuButton, BrPageContext } from '@bloomreach/react-sdk';\nimport { Header, Button, Form } from \"nhsuk-react-components\";\n\ninterface MenuLinkProps {\n  item: MenuModels['menu']['siteMenuItems'][0];\n}\n\nfunction MenuLink({ item }: MenuLinkProps) {\n  // const page = React.useContext(BrPageContext)!;\n\n  if (!item._links.site) {\n    return <Header.NavItem disabled>{item.name}</Header.NavItem>;\n  }\n\n  return <Header.NavItem href={item._links.site.href}>{item.name}</Header.NavItem>;\n\n  /* if (item._links.site.type === TYPE_LINK_EXTERNAL) {\n    return <Header.NavItem href={item._links.site.href}>{item.name}2</Header.NavItem>;\n  }\n  return <Header.NavItem href={page.getUrl(item._links.site)}>{item.name}3</Header.NavItem>; */\n}\n\nfunction Logout() {\n  return (\n    <>\n    <br/><br/>&nbsp;\n    <Form action=\"/site/logout\" method=\"post\">\n      &nbsp;&nbsp;<Button secondary>Logout</Button>\n    </Form>\n    </>\n  );\n}\n\nexport function Menu() {\n  const component = React.useContext(BrComponentContext);\n  const page = React.useContext(BrPageContext);\n\n  if (!component || !page) {\n    return null;\n  }\n\n  // Temp. hack to render `Logout` button only for spring-security\n  // secured `/user-home-page`\n  let renderLogoutButton = false;\n  if (page.toJSON()!._links!.site.href.endsWith('/user-home-page')) {\n    renderLogoutButton = true;\n  }\n\n  const { menu } = component.getModels<MenuModels>();\n\n  return (\n    <Header orgName=\"Health Education England\" orgSplit=\"Library and Knowledge Services\" orgDescriptor=\"NHS Foundation Trust\">\n      <Header.Container>\n        <Header.Logo href=\"/site\" />\n        <Header.Content>\n          <Header.MenuToggle />\n          <Header.Search />\n          { renderLogoutButton && <Logout /> }\n        </Header.Content>\n      </Header.Container>\n      {/* <Header.Container>\n        <Header.Content>\n          <Button href=\"/login\">Login</Button>\n        </Header.Content>\n      </Header.Container> */}\n      <Header.Nav className={page.isPreview() ? 'has-edit-button' : ''}>\n        {/* <Header.NavItem href=\"/\" mobileOnly>\n          Home\n        </Header.NavItem> */}\n        <BrManageMenuButton menu={menu} />\n        { menu.siteMenuItems.map((item, index) => (\n          <MenuLink key={index} item={item} />\n        )) }\n      </Header.Nav>\n    </Header>\n  );\n}\n","import React from 'react';\nimport { Footer as NHSFooter } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport default function Footer() {\n  return (\n    <NHSFooter>\n      <NHSFooter.List columns>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/nhs-sites/\">NHS sites</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/\">About us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/contact-us/\">Contact us</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/personalisation/login.aspx\">\n          Profile editor login\n        </NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/about-us/sitemap/\">Sitemap</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/accessibility/\">Accessibility</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/\">Our policies</NHSFooter.ListItem>\n        <NHSFooter.ListItem href=\"https://www.nhs.uk/our-policies/cookies-policy/\">\n          Cookies\n        </NHSFooter.ListItem>\n      </NHSFooter.List>\n      <NHSFooter.Copyright>&copy; Crown copyright</NHSFooter.Copyright>\n    </NHSFooter>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { SummaryList, BodyText, WarningCallout } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function AzureADProfile(props: BrProps) {\n  const { user } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!user) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Azure AD User Profile\">\n          <p>This component cannot be previewed in Channel Manager as it needs to get user profile from Azure AD which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Azure AD User Profile</h2>\n    <SummaryList noBorder>\n      <SummaryList.Row>\n        <SummaryList.Key>Name</SummaryList.Key>\n        <SummaryList.Value>{user.displayName}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Username</SummaryList.Key>\n        <SummaryList.Value>{user.username}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Job Title</SummaryList.Key>\n        <SummaryList.Value>{user.jobTitle}</SummaryList.Value>\n      </SummaryList.Row>\n      <SummaryList.Row>\n        <SummaryList.Key>Groups</SummaryList.Key>\n        <SummaryList.Value>\n          { user.groups.map((group: String, index: string | number | undefined) => (\n            <BodyText key={index}>{group}</BodyText>\n          )) }\n        </SummaryList.Value>\n      </SummaryList.Row>\n    </SummaryList>\n    </>\n  );\n}\n","import { BrProps, BrPageContext } from '@bloomreach/react-sdk';\nimport React from 'react';\nimport { ContentsList, SummaryList, WarningCallout } from \"nhsuk-react-components\";\n\n// Renders hardcoded Footer for now\nexport function SharepointFiles(props: BrProps) {\n  const { sharepointSiteFiles } = props.component.getModels();\n  const page = React.useContext(BrPageContext);\n\n  if (!sharepointSiteFiles) {\n    if (page && page.isPreview()) {\n      return (\n        <WarningCallout label=\"Sharepoint Documents\">\n          <p>This component cannot be previewed in Channel Manager as it needs to list files from Sharepoint which in turn requires an Azure AD/Office 365 user to be logged in.</p>\n        </WarningCallout>\n      )\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <>\n    <h2>Sharepoint Documents</h2>\n    { Object.keys(sharepointSiteFiles).map((key, index) => {\n      return (\n        <ContentsList key={index}>\n          <SummaryList.Row><b>{key}</b></SummaryList.Row>\n          { sharepointSiteFiles[key].map((item: { url: string | undefined; title: string; fileType: string; modifiedBy: string; modifiedDate: number; }, index: string | number | undefined) => {\n            return (\n              <>\n              <p>\n              <ContentsList.Item href={item.url} key={index} target=\"_blank\">\n                {item.title}\n              </ContentsList.Item>\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[{item.fileType}] [Last Modified By: {item.modifiedBy}, Date: {new Date(item.modifiedDate).toUTCString()}]\n              </p>\n            </>\n            )\n          }) }\n        </ContentsList>\n      )\n    }) }\n    </>\n  );\n}\n","import React from 'react';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { BrComponent, BrPage, BrPageContext } from '@bloomreach/react-sdk';\nimport { Menu, AzureADProfile, SharepointFiles } from './components';\nimport Footer from './components/Footer';\nimport { Label } from \"nhsuk-react-components\";\n\naxios.interceptors.request.use(config => ({ ...config, withCredentials: true }));\n\nexport default function App(props: RouteComponentProps) {\n\n  // This is to remove the extra `/site` from the route path, for instnce /site/resourceapi/site/user-home-page\n  // so that it becomes /site/resourceapi/user-home-page. This is required for live mode only.\n  var siteContextRemovedPath = props.location.pathname;\n  if (props.location.pathname.startsWith('/site') && !props.location.pathname.startsWith('/site/_cmsinternal')) {\n    siteContextRemovedPath = props.location.pathname.substring('/site'.length);\n  }\n\n  const configuration = {\n    httpClient: axios,\n    options: {\n      live: {\n        cmsBaseUrl: process.env.REACT_APP_LIVE_BR_BASE_URL!,\n        spaBaseUrl: process.env.REACT_APP_LIVE_SPA_BASE_URL,\n      },\n      preview: {\n        cmsBaseUrl: process.env.REACT_APP_PREVIEW_BR_BASE_URL!,\n        spaBaseUrl: process.env.REACT_APP_PREVIEW_SPA_BASE_URL,\n      },\n    },\n    request: {\n      path: `${siteContextRemovedPath}${props.location.search}`,\n    },\n  };\n  const mapping = { 'AzureAD Profile': AzureADProfile, 'Sharepoint Files': SharepointFiles };\n\n  return (\n    <BrPage configuration={configuration} mapping={mapping}>\n      <header>\n        <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top bg-dark\" role=\"navigation\">\n          <div className=\"container\">\n            {/* <BrPageContext.Consumer>\n              { page => (\n                <Link to={page!.getUrl('/')} className=\"navbar-brand\">\n                  { page!.getTitle() || 'brXM + React + Hello = ♥️'}\n                </Link>\n              ) }\n            </BrPageContext.Consumer> */}\n            <div className=\"collapse navbar-collapse\">\n              <BrComponent path=\"menu\">\n                <Menu />\n              </BrComponent>\n            </div>\n          </div>\n        </nav>\n      </header>\n      <div className=\"nhsuk-width-container\">\n        <main className=\"nhsuk-main-wrapper\" id=\"maincontent\">\n          <BrPageContext.Consumer>\n            { page => (\n              <Label isPageHeading>{ page!.getTitle() }</Label>\n            ) }\n          </BrPageContext.Consumer>\n          <BrComponent path=\"main\" />\n        </main>\n      </div>\n      <Footer />\n    </BrPage>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/(.*)\" component={App} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}